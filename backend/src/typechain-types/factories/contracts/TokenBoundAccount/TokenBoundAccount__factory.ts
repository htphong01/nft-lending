/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenBoundAccount,
  TokenBoundAccountInterface,
} from "../../../contracts/TokenBoundAccount/TokenBoundAccount";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610a518061001f6000396000f3fe6080604052600436106100595760003560e01c806301ffc9a7146100655780631626ba7e1461009a5780638da5cb5b146100d35780639e5d4c4914610100578063affed0e014610120578063fc0c546a1461014457600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506100856100803660046106e7565b61017c565b60405190151581526020015b60405180910390f35b3480156100a657600080fd5b506100ba6100b5366004610727565b6101b3565b6040516001600160e01b03199091168152602001610091565b3480156100df57600080fd5b506100e86101ea565b6040516001600160a01b039091168152602001610091565b61011361010e366004610802565b6102da565b60405161009191906108de565b34801561012c57600080fd5b5061013660005481565b604051908152602001610091565b34801561015057600080fd5b5061015961040d565b604080519384526001600160a01b03909216602084015290820152606001610091565b60006001600160e01b031982166301ffc9a760e01b14806101ad57506001600160e01b03198216630801407360e31b145b92915050565b6000806101c86101c16101ea565b8585610425565b905080156101e05750630b135d3f60e11b90506101ad565b5060009392505050565b600080600080306001600160a01b031663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906108f1565b925092509250468314610269576000935050505090565b6040516331a9108f60e11b8152600481018290526001600160a01b03831690636352211e90602401602060405180830381865afa1580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d2919061092c565b935050505090565b60606102e46101ea565b6001600160a01b0316336001600160a01b03161461033a5760405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b604482015260640160405180910390fd5b600080815461034890610949565b9190508190555083856001600160a01b03167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2858560405161038b929190610970565b60405180910390a36000856001600160a01b03168585856040516103b092919061099f565b60006040518083038185875af1925050503d80600081146103ed576040519150601f19603f3d011682016040523d82523d6000602084013e6103f2565b606091505b50925090508061040457815160208301fd5b50949350505050565b600080600061041a61049c565b925092509250909192565b6000836001600160a01b03163b6000036104875760008061044685856104ef565b5090925090506000816003811115610460576104606109af565b14801561047e5750856001600160a01b0316826001600160a01b0316145b92505050610495565b61049284848461053c565b90505b9392505050565b60408051606080825260808201909252600091829182918291906020820181803683370190505090506060604d60208301303c808060200190518101906104e391906108f1565b93509350935050909192565b600080600083516041036105295760208401516040850151606086015160001a61051b88828585610618565b955095509550505050610535565b50508151600091506002905b9250925092565b6000806000856001600160a01b0316858560405160240161055e9291906109c5565b60408051601f198184030181529181526020820180516001600160e01b0316630b135d3f60e11b1790525161059391906109e6565b600060405180830381855afa9150503d80600081146105ce576040519150601f19603f3d011682016040523d82523d6000602084013e6105d3565b606091505b50915091508180156105e757506020815110155b801561060e57508051630b135d3f60e11b9061060c9083016020908101908401610a02565b145b9695505050505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561065357506000915060039050826106dd565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156106a7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166106d3575060009250600191508290506106dd565b9250600091508190505b9450945094915050565b6000602082840312156106f957600080fd5b81356001600160e01b03198116811461049557600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561073a57600080fd5b82359150602083013567ffffffffffffffff81111561075857600080fd5b8301601f8101851361076957600080fd5b803567ffffffffffffffff81111561078357610783610711565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107b2576107b2610711565b6040528181528282016020018710156107ca57600080fd5b816020840160208301376000602083830101528093505050509250929050565b6001600160a01b03811681146107ff57600080fd5b50565b6000806000806060858703121561081857600080fd5b8435610823816107ea565b935060208501359250604085013567ffffffffffffffff81111561084657600080fd5b8501601f8101871361085757600080fd5b803567ffffffffffffffff81111561086e57600080fd5b87602082840101111561088057600080fd5b949793965060200194505050565b60005b838110156108a9578181015183820152602001610891565b50506000910152565b600081518084526108ca81602086016020860161088e565b601f01601f19169290920160200192915050565b60208152600061049560208301846108b2565b60008060006060848603121561090657600080fd5b83516020850151909350610919816107ea565b6040949094015192959394509192915050565b60006020828403121561093e57600080fd5b8151610495816107ea565b60006001820161096957634e487b7160e01b600052601160045260246000fd5b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b8281526040602082015260006109de60408301846108b2565b949350505050565b600082516109f881846020870161088e565b9190910192915050565b600060208284031215610a1457600080fd5b505191905056fea2646970667358221220bd05b1dc128a0bda87c067d124783a130269792da96a473a6586543bc513458964736f6c634300081c0033";

type TokenBoundAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBoundAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBoundAccount__factory extends ContractFactory {
  constructor(...args: TokenBoundAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenBoundAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenBoundAccount__factory {
    return super.connect(runner) as TokenBoundAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBoundAccountInterface {
    return new Interface(_abi) as TokenBoundAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenBoundAccount {
    return new Contract(address, _abi, runner) as unknown as TokenBoundAccount;
  }
}
