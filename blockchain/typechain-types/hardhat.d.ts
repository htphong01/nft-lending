/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "Create2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Create2__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "ChonkSociety",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChonkSociety__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "ILendingStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingStake__factory>;
    getContractFactory(
      name: "IMarketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMarketplace__factory>;
    getContractFactory(
      name: "IPermittedERC20s",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermittedERC20s__factory>;
    getContractFactory(
      name: "IPermittedNFTs",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPermittedNFTs__factory>;
    getContractFactory(
      name: "ITokenBoundAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenBoundAccount__factory>;
    getContractFactory(
      name: "ITokenBoundAccountProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenBoundAccountProxy__factory>;
    getContractFactory(
      name: "ITokenBoundAccountRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenBoundAccountRegistry__factory>;
    getContractFactory(
      name: "LendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingPool__factory>;
    getContractFactory(
      name: "LendingStake",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LendingStake__factory>;
    getContractFactory(
      name: "TransferHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransferHelper__factory>;
    getContractFactory(
      name: "BaseLoan",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseLoan__factory>;
    getContractFactory(
      name: "DirectLoanBaseMinimal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DirectLoanBaseMinimal__factory>;
    getContractFactory(
      name: "DirectLoanFixedOffer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DirectLoanFixedOffer__factory>;
    getContractFactory(
      name: "IDirectLoanBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDirectLoanBase__factory>;
    getContractFactory(
      name: "LoanChecksAndCalculations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LoanChecksAndCalculations__factory>;
    getContractFactory(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Marketplace__factory>;
    getContractFactory(
      name: "MockERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC1155__factory>;
    getContractFactory(
      name: "MockERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC721__factory>;
    getContractFactory(
      name: "PermittedNFTs",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PermittedNFTs__factory>;
    getContractFactory(
      name: "GOLD",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GOLD__factory>;
    getContractFactory(
      name: "Character",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Character__factory>;
    getContractFactory(
      name: "SILVER",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SILVER__factory>;
    getContractFactory(
      name: "TokenBoundAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenBoundAccount__factory>;
    getContractFactory(
      name: "TokenBoundAccountRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenBoundAccountRegistry__factory>;
    getContractFactory(
      name: "Weapon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Weapon__factory>;
    getContractFactory(
      name: "NFTfiSigningUtils",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTfiSigningUtils__factory>;
    getContractFactory(
      name: "NFTfiSigningUtilsContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFTfiSigningUtilsContract__factory>;
    getContractFactory(
      name: "Permission",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Permission__factory>;
    getContractFactory(
      name: "WXENE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WXENE__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC2981",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981>;
    getContractAt(
      name: "IERC4906",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "Create2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Create2>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "ChonkSociety",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ChonkSociety>;
    getContractAt(
      name: "ILendingPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingPool>;
    getContractAt(
      name: "ILendingStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILendingStake>;
    getContractAt(
      name: "IMarketplace",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMarketplace>;
    getContractAt(
      name: "IPermittedERC20s",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermittedERC20s>;
    getContractAt(
      name: "IPermittedNFTs",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPermittedNFTs>;
    getContractAt(
      name: "ITokenBoundAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenBoundAccount>;
    getContractAt(
      name: "ITokenBoundAccountProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenBoundAccountProxy>;
    getContractAt(
      name: "ITokenBoundAccountRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenBoundAccountRegistry>;
    getContractAt(
      name: "LendingPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingPool>;
    getContractAt(
      name: "LendingStake",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LendingStake>;
    getContractAt(
      name: "TransferHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TransferHelper>;
    getContractAt(
      name: "BaseLoan",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseLoan>;
    getContractAt(
      name: "DirectLoanBaseMinimal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DirectLoanBaseMinimal>;
    getContractAt(
      name: "DirectLoanFixedOffer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DirectLoanFixedOffer>;
    getContractAt(
      name: "IDirectLoanBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDirectLoanBase>;
    getContractAt(
      name: "LoanChecksAndCalculations",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LoanChecksAndCalculations>;
    getContractAt(
      name: "Marketplace",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Marketplace>;
    getContractAt(
      name: "MockERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC1155>;
    getContractAt(
      name: "MockERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC721>;
    getContractAt(
      name: "PermittedNFTs",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PermittedNFTs>;
    getContractAt(
      name: "GOLD",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GOLD>;
    getContractAt(
      name: "Character",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Character>;
    getContractAt(
      name: "SILVER",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SILVER>;
    getContractAt(
      name: "TokenBoundAccount",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenBoundAccount>;
    getContractAt(
      name: "TokenBoundAccountRegistry",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenBoundAccountRegistry>;
    getContractAt(
      name: "Weapon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Weapon>;
    getContractAt(
      name: "NFTfiSigningUtils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTfiSigningUtils>;
    getContractAt(
      name: "NFTfiSigningUtilsContract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NFTfiSigningUtilsContract>;
    getContractAt(
      name: "Permission",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Permission>;
    getContractAt(
      name: "WXENE",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WXENE>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC2981",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721URIStorage>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Create2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Create2>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ChonkSociety",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChonkSociety>;
    deployContract(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILendingPool>;
    deployContract(
      name: "ILendingStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILendingStake>;
    deployContract(
      name: "IMarketplace",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMarketplace>;
    deployContract(
      name: "IPermittedERC20s",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermittedERC20s>;
    deployContract(
      name: "IPermittedNFTs",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermittedNFTs>;
    deployContract(
      name: "ITokenBoundAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccount>;
    deployContract(
      name: "ITokenBoundAccountProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccountProxy>;
    deployContract(
      name: "ITokenBoundAccountRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccountRegistry>;
    deployContract(
      name: "LendingPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LendingPool>;
    deployContract(
      name: "LendingStake",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LendingStake>;
    deployContract(
      name: "TransferHelper",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TransferHelper>;
    deployContract(
      name: "BaseLoan",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseLoan>;
    deployContract(
      name: "DirectLoanBaseMinimal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectLoanBaseMinimal>;
    deployContract(
      name: "DirectLoanFixedOffer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectLoanFixedOffer>;
    deployContract(
      name: "IDirectLoanBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDirectLoanBase>;
    deployContract(
      name: "LoanChecksAndCalculations",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoanChecksAndCalculations>;
    deployContract(
      name: "Marketplace",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Marketplace>;
    deployContract(
      name: "MockERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1155>;
    deployContract(
      name: "MockERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC721>;
    deployContract(
      name: "PermittedNFTs",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermittedNFTs>;
    deployContract(
      name: "GOLD",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GOLD>;
    deployContract(
      name: "Character",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Character>;
    deployContract(
      name: "SILVER",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SILVER>;
    deployContract(
      name: "TokenBoundAccount",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBoundAccount>;
    deployContract(
      name: "TokenBoundAccountRegistry",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBoundAccountRegistry>;
    deployContract(
      name: "Weapon",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Weapon>;
    deployContract(
      name: "NFTfiSigningUtils",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTfiSigningUtils>;
    deployContract(
      name: "NFTfiSigningUtilsContract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTfiSigningUtilsContract>;
    deployContract(
      name: "Permission",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permission>;
    deployContract(
      name: "WXENE",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WXENE>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC2981",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981>;
    deployContract(
      name: "IERC4906",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "ERC721URIStorage",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721URIStorage>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "ERC721Holder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Holder>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Address>;
    deployContract(
      name: "Create2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Create2>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ChonkSociety",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ChonkSociety>;
    deployContract(
      name: "ILendingPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILendingPool>;
    deployContract(
      name: "ILendingStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILendingStake>;
    deployContract(
      name: "IMarketplace",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMarketplace>;
    deployContract(
      name: "IPermittedERC20s",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermittedERC20s>;
    deployContract(
      name: "IPermittedNFTs",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPermittedNFTs>;
    deployContract(
      name: "ITokenBoundAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccount>;
    deployContract(
      name: "ITokenBoundAccountProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccountProxy>;
    deployContract(
      name: "ITokenBoundAccountRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ITokenBoundAccountRegistry>;
    deployContract(
      name: "LendingPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LendingPool>;
    deployContract(
      name: "LendingStake",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LendingStake>;
    deployContract(
      name: "TransferHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TransferHelper>;
    deployContract(
      name: "BaseLoan",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.BaseLoan>;
    deployContract(
      name: "DirectLoanBaseMinimal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectLoanBaseMinimal>;
    deployContract(
      name: "DirectLoanFixedOffer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DirectLoanFixedOffer>;
    deployContract(
      name: "IDirectLoanBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDirectLoanBase>;
    deployContract(
      name: "LoanChecksAndCalculations",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LoanChecksAndCalculations>;
    deployContract(
      name: "Marketplace",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Marketplace>;
    deployContract(
      name: "MockERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC1155>;
    deployContract(
      name: "MockERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockERC721>;
    deployContract(
      name: "PermittedNFTs",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.PermittedNFTs>;
    deployContract(
      name: "GOLD",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GOLD>;
    deployContract(
      name: "Character",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Character>;
    deployContract(
      name: "SILVER",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SILVER>;
    deployContract(
      name: "TokenBoundAccount",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBoundAccount>;
    deployContract(
      name: "TokenBoundAccountRegistry",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TokenBoundAccountRegistry>;
    deployContract(
      name: "Weapon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Weapon>;
    deployContract(
      name: "NFTfiSigningUtils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTfiSigningUtils>;
    deployContract(
      name: "NFTfiSigningUtilsContract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NFTfiSigningUtilsContract>;
    deployContract(
      name: "Permission",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Permission>;
    deployContract(
      name: "WXENE",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WXENE>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
