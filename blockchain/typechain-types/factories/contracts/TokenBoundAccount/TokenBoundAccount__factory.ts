/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenBoundAccount,
  TokenBoundAccountInterface,
} from "../../../contracts/TokenBoundAccount/TokenBoundAccount";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506116b48061001f6000396000f3fe6080604052600436106100595760003560e01c806301ffc9a7146100655780631626ba7e146100a25780638da5cb5b146100df5780639e5d4c491461010a578063affed0e01461013a578063fc0c546a1461016557610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610d63565b610192565b6040516100999190610dab565b60405180910390f35b3480156100ae57600080fd5b506100c960048036038101906100c49190610f42565b6102d8565b6040516100d69190610fad565b60405180910390f35b3480156100eb57600080fd5b506100f46103ee565b6040516101019190611009565b60405180910390f35b610124600480360381019061011f91906110e6565b6105c8565b60405161013191906111d9565b60405180910390f35b34801561014657600080fd5b5061014f610870565b60405161015c919061120a565b60405180910390f35b34801561017157600080fd5b5061017a610876565b60405161018993929190611225565b60405180910390f35b60006101a8675b77cf859b2c3deb60c01b6108ca565b6101bc678b831bb2a72974c960c01b6108ca565b6101d067ef6f8ac0509ad4de60c01b6108ca565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614801561024d575061024c6793efe0877aab842260c01b6108cd565b5b806102d157507f400a0398000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480156102d057506102cf67cdb5133b539b3cb360c01b6108cd565b5b5b9050919050565b60006102ee6733c382b9318ea16160c01b6108ca565b61030267580f4e8dca42468860c01b6108ca565b6103166771278c8dfd56450560c01b6108ca565b600061032a6103236103ee565b85856108d8565b9050610340678250bbcaed7ef3e560c01b6108ca565b6103546791ffbaecef6ae11b60c01b6108ca565b80156103a65761036e67dac8d364c64a79e760c01b6108ca565b6103826708f5fc3879c0685e60c01b6108ca565b61039667c108a2385c9b711d60c01b6108ca565b631626ba7e60e01b9150506103e8565b6103ba673f4123427dd2351060c01b6108ca565b6103ce6725ecfce90825b30c60c01b6108ca565b6103e267d487173ee635c77660c01b6108ca565b60009150505b92915050565b600061040467c028ce3714de63cf60c01b6108ca565b610418677f366e4c7d9f90da60c01b6108ca565b61042c67f8d9037498723b8260c01b6108ca565b60008060003073ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a09190611286565b9250925092506104ba679d7832b74f34eb9460c01b6108ca565b6104ce679063cde2267ac48360c01b6108ca565b468314610509576104e967755294420f8e62d660c01b6108ca565b6104fd67ba9ad358e9ef689a60c01b6108ca565b600093505050506105c5565b61051d671edc795a5799266d60c01b6108ca565b610531676b26c6a2788ff67760c01b6108ca565b61054567d67b04eccc94db9260c01b6108ca565b8173ffffffffffffffffffffffffffffffffffffffff16636352211e826040518263ffffffff1660e01b815260040161057e919061120a565b602060405180830381865afa15801561059b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bf91906112d9565b93505050505b90565b60606105de67100dee1f6437048460c01b6108ca565b6105f2678fd93ac8d3491a8760c01b6108ca565b61060667da2e31b1409fcda360c01b6108ca565b61061a676e1779de4b797a9760c01b6108ca565b6106226103ee565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690611363565b60405180910390fd5b6106a367996ba095298be3f960c01b6108ca565b6106b767d5022cffc8528b6b60c01b6108ca565b60008081546106c5906113b2565b919050819055506106e067eb5f117f3247522060c01b6108ca565b6106f46718eca571cfea554f60c01b6108ca565b838573ffffffffffffffffffffffffffffffffffffffff167f47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2858560405161073d929190611427565b60405180910390a361075967e76ee60436a6ff4860c01b6108ca565b61076d674aea56397a68b2b860c01b6108ca565b600061078367a03a7b8c26c1bd1360c01b6108ca565b8573ffffffffffffffffffffffffffffffffffffffff168585856040516107ab92919061147b565b60006040518083038185875af1925050503d80600081146107e8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ed565b606091505b50809350819250505061080a6705774e974e67341260c01b6108ca565b61081e67e7f41f9a88b7a74b60c01b6108ca565b806108535761083767ebd291b7f22c3dd960c01b6108ca565b61084b671c30e386157c4f1560c01b6108ca565b815160208301fd5b6108676767dce9b9d0d76def60c01b6108ca565b50949350505050565b60005481565b600080600061088f676c0e69c7045a66b760c01b6108ca565b6108a367ed723e4ebd36e74660c01b6108ca565b6108b767a80cbf6baae7312060c01b6108ca565b6108bf610987565b925092509250909192565b50565b600060019050919050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b03610972576000806109058585610a80565b50915091506000600381111561091e5761091d611494565b5b81600381111561093157610930611494565b5b14801561096957508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92505050610980565b61097d848484610adc565b90505b9392505050565b60008060006109a0670f47576e26dfbf6f60c01b610c00565b6109b46711a7f177ca244d2e60c01b610c00565b6109c867128b269d75c5c7ee60c01b610c00565b6000606067ffffffffffffffff8111156109e5576109e4610e17565b5b6040519080825280601f01601f191660200182016040528015610a175781602001600182028036833780820191505090505b509050610a2e67a75d3b6ef1b507fd60c01b610c00565b6060604d60208301303c610a4c678d6fe9449c604e7760c01b610c00565b610a60677dea873a385c87a660c01b610c00565b80806020019051810190610a749190611501565b93509350935050909192565b60008060006041845103610ac55760008060006020870151925060408701519150606087015160001a9050610ab788828585610c03565b955095509550505050610ad5565b60006002855160001b9250925092505b9250925092565b60008060008573ffffffffffffffffffffffffffffffffffffffff168585604051602401610b0b929190611563565b604051602081830303815290604052631626ba7e60e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b5d91906115c4565b600060405180830381855afa9150503d8060008114610b98576040519150601f19603f3d011682016040523d82523d6000602084013e610b9d565b606091505b5091509150818015610bb157506020815110155b8015610bf55750631626ba7e60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681806020019051810190610bf391906115f0565b145b925050509392505050565b50565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610c43576000600385925092509250610ced565b600060018888888860405160008152602001604052604051610c689493929190611639565b6020604051602081039080840390855afa158015610c8a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cde57600060016000801b93509350935050610ced565b8060008060001b935093509350505b9450945094915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d4081610d0b565b8114610d4b57600080fd5b50565b600081359050610d5d81610d37565b92915050565b600060208284031215610d7957610d78610d01565b5b6000610d8784828501610d4e565b91505092915050565b60008115159050919050565b610da581610d90565b82525050565b6000602082019050610dc06000830184610d9c565b92915050565b6000819050919050565b610dd981610dc6565b8114610de457600080fd5b50565b600081359050610df681610dd0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e4f82610e06565b810181811067ffffffffffffffff82111715610e6e57610e6d610e17565b5b80604052505050565b6000610e81610cf7565b9050610e8d8282610e46565b919050565b600067ffffffffffffffff821115610ead57610eac610e17565b5b610eb682610e06565b9050602081019050919050565b82818337600083830152505050565b6000610ee5610ee084610e92565b610e77565b905082815260208101848484011115610f0157610f00610e01565b5b610f0c848285610ec3565b509392505050565b600082601f830112610f2957610f28610dfc565b5b8135610f39848260208601610ed2565b91505092915050565b60008060408385031215610f5957610f58610d01565b5b6000610f6785828601610de7565b925050602083013567ffffffffffffffff811115610f8857610f87610d06565b5b610f9485828601610f14565b9150509250929050565b610fa781610d0b565b82525050565b6000602082019050610fc26000830184610f9e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ff382610fc8565b9050919050565b61100381610fe8565b82525050565b600060208201905061101e6000830184610ffa565b92915050565b61102d81610fe8565b811461103857600080fd5b50565b60008135905061104a81611024565b92915050565b6000819050919050565b61106381611050565b811461106e57600080fd5b50565b6000813590506110808161105a565b92915050565b600080fd5b600080fd5b60008083601f8401126110a6576110a5610dfc565b5b8235905067ffffffffffffffff8111156110c3576110c2611086565b5b6020830191508360018202830111156110df576110de61108b565b5b9250929050565b60008060008060608587031215611100576110ff610d01565b5b600061110e8782880161103b565b945050602061111f87828801611071565b935050604085013567ffffffffffffffff8111156111405761113f610d06565b5b61114c87828801611090565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611194578082015181840152602081019050611179565b60008484015250505050565b60006111ab8261115a565b6111b58185611165565b93506111c5818560208601611176565b6111ce81610e06565b840191505092915050565b600060208201905081810360008301526111f381846111a0565b905092915050565b61120481611050565b82525050565b600060208201905061121f60008301846111fb565b92915050565b600060608201905061123a60008301866111fb565b6112476020830185610ffa565b61125460408301846111fb565b949350505050565b60008151905061126b8161105a565b92915050565b60008151905061128081611024565b92915050565b60008060006060848603121561129f5761129e610d01565b5b60006112ad8682870161125c565b93505060206112be86828701611271565b92505060406112cf8682870161125c565b9150509250925092565b6000602082840312156112ef576112ee610d01565b5b60006112fd84828501611271565b91505092915050565b600082825260208201905092915050565b7f4e6f7420746f6b656e206f776e65720000000000000000000000000000000000600082015250565b600061134d600f83611306565b915061135882611317565b602082019050919050565b6000602082019050818103600083015261137c81611340565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113bd82611050565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113ef576113ee611383565b5b600182019050919050565b60006114068385611165565b9350611413838584610ec3565b61141c83610e06565b840190509392505050565b600060208201905081810360008301526114428184866113fa565b90509392505050565b600081905092915050565b6000611462838561144b565b935061146f838584610ec3565b82840190509392505050565b6000611488828486611456565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006114ce82610fc8565b9050919050565b6114de816114c3565b81146114e957600080fd5b50565b6000815190506114fb816114d5565b92915050565b60008060006060848603121561151a57611519610d01565b5b60006115288682870161125c565b9350506020611539868287016114ec565b925050604061154a8682870161125c565b9150509250925092565b61155d81610dc6565b82525050565b60006040820190506115786000830185611554565b818103602083015261158a81846111a0565b90509392505050565b600061159e8261115a565b6115a8818561144b565b93506115b8818560208601611176565b80840191505092915050565b60006115d08284611593565b915081905092915050565b6000815190506115ea81610dd0565b92915050565b60006020828403121561160657611605610d01565b5b6000611614848285016115db565b91505092915050565b600060ff82169050919050565b6116338161161d565b82525050565b600060808201905061164e6000830187611554565b61165b602083018661162a565b6116686040830185611554565b6116756060830184611554565b9594505050505056fea26469706673582212200557dfab0bcffd9009f69429253cb2e21c552af9491d21ee9cd10a308429714164736f6c634300081c0033";

type TokenBoundAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBoundAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBoundAccount__factory extends ContractFactory {
  constructor(...args: TokenBoundAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenBoundAccount & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenBoundAccount__factory {
    return super.connect(runner) as TokenBoundAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBoundAccountInterface {
    return new Interface(_abi) as TokenBoundAccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenBoundAccount {
    return new Contract(address, _abi, runner) as unknown as TokenBoundAccount;
  }
}
