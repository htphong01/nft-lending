/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC6551Account,
  ERC6551AccountInterface,
} from "../../../contracts/TokenBoundAccount/ERC6551Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405246608052348015601357600080fd5b50608051610afb61002f60003960006103b00152610afb6000f3fe6080604052600436106100745760003560e01c8063523e32601161004e578063523e32601461010e5780638da5cb5b1461012e578063c19d93fb1461015b578063fc0c546a1461017f57600080fd5b806301ffc9a7146100805780631626ba7e146100b557806351945447146100ee57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610734565b6101b7565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100d56100d0366004610774565b610209565b6040516001600160e01b031990911681526020016100ac565b6101016100fc366004610898565b610240565b6040516100ac9190610962565b34801561011a57600080fd5b506100d5610129366004610975565b610379565b34801561013a57600080fd5b5061014361039a565b6040516001600160a01b0390911681526020016100ac565b34801561016757600080fd5b5061017160005481565b6040519081526020016100ac565b34801561018b57600080fd5b50610194610450565b604080519384526001600160a01b039092166020840152908201526060016100ac565b60006001600160e01b031982166301ffc9a760e01b14806101e857506001600160e01b03198216636faff5f160e01b145b8061020357506001600160e01b03198216635194544760e01b145b92915050565b60008061021e61021761039a565b85856104a3565b905080156102365750630b135d3f60e11b9050610203565b5060009392505050565b606061024b33610517565b61028d5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b60448201526064015b60405180910390fd5b60ff8216156102e95760405162461bcd60e51b815260206004820152602260248201527f4f6e6c792063616c6c206f7065726174696f6e732061726520737570706f7274604482015261195960f21b6064820152608401610284565b60008081546102f7906109ca565b919050819055506000866001600160a01b031686868660405161031b9291906109f1565b60006040518083038185875af1925050503d8060008114610358576040519150601f19603f3d011682016040523d82523d6000602084013e61035d565b606091505b50925090508061036f57815160208301fd5b5095945050505050565b600061038484610517565b156102365750630291f19360e51b5b9392505050565b6000806000806103a8610450565b9250925092507f000000000000000000000000000000000000000000000000000000000000000083146103df576000935050505090565b6040516331a9108f60e11b8152600481018290526001600160a01b03831690636352211e90602401602060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104489190610a01565b935050505090565b60408051606080825260808201909252600091829182918291906020820181803683370190505090506060604d60208301303c808060200190518101906104979190610a1e565b93509350935050909192565b6000836001600160a01b03163b600003610505576000806104c4858561053c565b50909250905060008160038111156104de576104de610a59565b1480156104fc5750856001600160a01b0316826001600160a01b0316145b92505050610393565b610510848484610589565b9050610393565b600061052161039a565b6001600160a01b0316826001600160a01b0316149050919050565b600080600083516041036105765760208401516040850151606086015160001a61056888828585610665565b955095509550505050610582565b50508151600091506002905b9250925092565b6000806000856001600160a01b031685856040516024016105ab929190610a6f565b60408051601f198184030181529181526020820180516001600160e01b0316630b135d3f60e11b179052516105e09190610a90565b600060405180830381855afa9150503d806000811461061b576040519150601f19603f3d011682016040523d82523d6000602084013e610620565b606091505b509150915081801561063457506020815110155b801561065b57508051630b135d3f60e11b906106599083016020908101908401610aac565b145b9695505050505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156106a0575060009150600390508261072a565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156106f4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107205750600092506001915082905061072a565b9250600091508190505b9450945094915050565b60006020828403121561074657600080fd5b81356001600160e01b03198116811461039357600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561078757600080fd5b82359150602083013567ffffffffffffffff8111156107a557600080fd5b8301601f810185136107b657600080fd5b803567ffffffffffffffff8111156107d0576107d061075e565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156107ff576107ff61075e565b60405281815282820160200187101561081757600080fd5b816020840160208301376000602083830101528093505050509250929050565b6001600160a01b038116811461084c57600080fd5b50565b60008083601f84011261086157600080fd5b50813567ffffffffffffffff81111561087957600080fd5b60208301915083602082850101111561089157600080fd5b9250929050565b6000806000806000608086880312156108b057600080fd5b85356108bb81610837565b945060208601359350604086013567ffffffffffffffff8111156108de57600080fd5b6108ea8882890161084f565b909450925050606086013560ff8116811461090457600080fd5b809150509295509295909350565b60005b8381101561092d578181015183820152602001610915565b50506000910152565b6000815180845261094e816020860160208601610912565b601f01601f19169290920160200192915050565b6020815260006103936020830184610936565b60008060006040848603121561098a57600080fd5b833561099581610837565b9250602084013567ffffffffffffffff8111156109b157600080fd5b6109bd8682870161084f565b9497909650939450505050565b6000600182016109ea57634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b600060208284031215610a1357600080fd5b815161039381610837565b600080600060608486031215610a3357600080fd5b83516020850151909350610a4681610837565b6040949094015192959394509192915050565b634e487b7160e01b600052602160045260246000fd5b828152604060208201526000610a886040830184610936565b949350505050565b60008251610aa2818460208701610912565b9190910192915050565b600060208284031215610abe57600080fd5b505191905056fea2646970667358221220c991065f5d43fb450b01a343030b329bcb47f2497a37fbd808a1dfb427ad93fc64736f6c634300081c0033";

type ERC6551AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC6551AccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC6551Account__factory extends ContractFactory {
  constructor(...args: ERC6551AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC6551Account & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC6551Account__factory {
    return super.connect(runner) as ERC6551Account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC6551AccountInterface {
    return new Interface(_abi) as ERC6551AccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC6551Account {
    return new Contract(address, _abi, runner) as unknown as ERC6551Account;
  }
}
