/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Character,
  CharacterInterface,
} from "../../../../contracts/TokenBoundAccount/MockERC721.sol/Character";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600981526020016821b430b930b1ba32b960b91b8152506040518060400160405280600481526020016321a420a960e11b815250816000908161005f9190610113565b50600161006c8282610113565b5050506101d1565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009e57607f821691505b6020821081036100be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561010e57806000526020600020601f840160051c810160208510156100eb5750805b601f840160051c820191505b8181101561010b57600081556001016100f7565b50505b505050565b81516001600160401b0381111561012c5761012c610074565b6101408161013a845461008a565b846100c4565b6020601f821160018114610174576000831561015c5750848201515b600019600385901b1c1916600184901b17845561010b565b600084815260208120601f198516915b828110156101a45787850151825560209485019460019092019101610184565b50848210156101c25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b611317806101e06000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146101f5578063c87b56dd14610208578063d0def5211461021b578063e985e9c51461022e57600080fd5b806370a08231146101b0578063714cff56146101d157806395d89b41146101da578063a22cb465146101e257600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610ddd565b610241565b60405190151581526020015b60405180910390f35b61012a61026c565b6040516101199190610e4a565b61014a610145366004610e5d565b6102fe565b6040516001600160a01b039091168152602001610119565b610175610170366004610e92565b610327565b005b610175610185366004610ebc565b610336565b610175610198366004610ebc565b6103c6565b61014a6101ab366004610e5d565b6103e6565b6101c36101be366004610ef9565b6103f1565b604051908152602001610119565b6101c360075481565b61012a610439565b6101756101f0366004610f14565b610448565b610175610203366004610fe0565b610453565b61012a610216366004610e5d565b61046b565b61017561022936600461105c565b61057c565b61010d61023c3660046110be565b6105a9565b60006001600160e01b03198216632483248360e11b14806102665750610266826105d7565b92915050565b60606000805461027b906110f1565b80601f01602080910402602001604051908101604052809291908181526020018280546102a7906110f1565b80156102f45780601f106102c9576101008083540402835291602001916102f4565b820191906000526020600020905b8154815290600101906020018083116102d757829003601f168201915b5050505050905090565b600061030982610627565b506000828152600460205260409020546001600160a01b0316610266565b610332828233610660565b5050565b6001600160a01b03821661036557604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061037283833361066d565b9050836001600160a01b0316816001600160a01b0316146103c0576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161035c565b50505050565b6103e183838360405180602001604052806000815250610453565b505050565b600061026682610627565b60006001600160a01b03821661041d576040516322718ad960e21b81526000600482015260240161035c565b506001600160a01b031660009081526003602052604090205490565b60606001805461027b906110f1565b610332338383610766565b61045e848484610336565b6103c03385858585610805565b606061047682610627565b5060008281526006602052604081208054610490906110f1565b80601f01602080910402602001604051908101604052809291908181526020018280546104bc906110f1565b80156105095780601f106104de57610100808354040283529160200191610509565b820191906000526020600020905b8154815290600101906020018083116104ec57829003601f168201915b50505050509050600061052760408051602081019091526000815290565b90508051600003610539575092915050565b81511561056b57808260405160200161055392919061112b565b60405160208183030381529060405292505050919050565b61057484610930565b949350505050565b6007805490600061058c8361115a565b919050555061059d826007546109a5565b610332600754826109bf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061060857506001600160e01b03198216635b5e139f60e01b145b8061026657506301ffc9a760e01b6001600160e01b0319831614610266565b6000818152600260205260408120546001600160a01b03168061026657604051637e27328960e01b81526004810184905260240161035c565b6103e18383836001610a0f565b6000828152600260205260408120546001600160a01b039081169083161561069a5761069a818486610b15565b6001600160a01b038116156106d8576106b7600085600080610a0f565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610707576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b03821661079857604051630b61174360e31b81526001600160a01b038316600482015260240161035c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561092957604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610847908890889087908790600401611181565b6020604051808303816000875af1925050508015610882575060408051601f3d908101601f1916820190925261087f918101906111be565b60015b6108eb573d8080156108b0576040519150601f19603f3d011682016040523d82523d6000602084013e6108b5565b606091505b5080516000036108e357604051633250574960e11b81526001600160a01b038516600482015260240161035c565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461092757604051633250574960e11b81526001600160a01b038516600482015260240161035c565b505b5050505050565b606061093b82610627565b50600061095360408051602081019091526000815290565b90506000815111610973576040518060200160405280600081525061099e565b8061097d84610b79565b60405160200161098e92919061112b565b6040516020818303038152906040525b9392505050565b610332828260405180602001604052806000815250610c0c565b60008281526006602052604090206109d78282611222565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b8080610a2357506001600160a01b03821615155b15610ae5576000610a3384610627565b90506001600160a01b03831615801590610a5f5750826001600160a01b0316816001600160a01b031614155b8015610a725750610a7081846105a9565b155b15610a9b5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161035c565b8115610ae35783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b20838383610c24565b6103e1576001600160a01b038316610b4e57604051637e27328960e01b81526004810182905260240161035c565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161035c565b60606000610b8683610c87565b600101905060008167ffffffffffffffff811115610ba657610ba6610f50565b6040519080825280601f01601f191660200182016040528015610bd0576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610bda57509392505050565b610c168383610d5f565b6103e1336000858585610805565b60006001600160a01b038316158015906105745750826001600160a01b0316846001600160a01b03161480610c5e5750610c5e84846105a9565b806105745750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610cc65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610cf2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d1057662386f26fc10000830492506010015b6305f5e1008310610d28576305f5e100830492506008015b6127108310610d3c57612710830492506004015b60648310610d4e576064830492506002015b600a83106102665760010192915050565b6001600160a01b038216610d8957604051633250574960e11b81526000600482015260240161035c565b6000610d978383600061066d565b90506001600160a01b038116156103e1576040516339e3563760e11b81526000600482015260240161035c565b6001600160e01b031981168114610dda57600080fd5b50565b600060208284031215610def57600080fd5b813561099e81610dc4565b60005b83811015610e15578181015183820152602001610dfd565b50506000910152565b60008151808452610e36816020860160208601610dfa565b601f01601f19169290920160200192915050565b60208152600061099e6020830184610e1e565b600060208284031215610e6f57600080fd5b5035919050565b80356001600160a01b0381168114610e8d57600080fd5b919050565b60008060408385031215610ea557600080fd5b610eae83610e76565b946020939093013593505050565b600080600060608486031215610ed157600080fd5b610eda84610e76565b9250610ee860208501610e76565b929592945050506040919091013590565b600060208284031215610f0b57600080fd5b61099e82610e76565b60008060408385031215610f2757600080fd5b610f3083610e76565b915060208301358015158114610f4557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff841115610f8157610f81610f50565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715610fb057610fb0610f50565b604052838152905080828401851015610fc857600080fd5b83836020830137600060208583010152509392505050565b60008060008060808587031215610ff657600080fd5b610fff85610e76565b935061100d60208601610e76565b925060408501359150606085013567ffffffffffffffff81111561103057600080fd5b8501601f8101871361104157600080fd5b61105087823560208401610f66565b91505092959194509250565b6000806040838503121561106f57600080fd5b61107883610e76565b9150602083013567ffffffffffffffff81111561109457600080fd5b8301601f810185136110a557600080fd5b6110b485823560208401610f66565b9150509250929050565b600080604083850312156110d157600080fd5b6110da83610e76565b91506110e860208401610e76565b90509250929050565b600181811c9082168061110557607f821691505b60208210810361112557634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161113d818460208801610dfa565b835190830190611151818360208801610dfa565b01949350505050565b60006001820161117a57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111b490830184610e1e565b9695505050505050565b6000602082840312156111d057600080fd5b815161099e81610dc4565b601f8211156103e157806000526020600020601f840160051c810160208510156112025750805b601f840160051c820191505b81811015610929576000815560010161120e565b815167ffffffffffffffff81111561123c5761123c610f50565b6112508161124a84546110f1565b846111db565b6020601f821160018114611284576000831561126c5750848201515b600019600385901b1c1916600184901b178455610929565b600084815260208120601f198516915b828110156112b45787850151825560209485019460019092019101611294565b50848210156112d25786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea26469706673582212209cd8f08bd99f3c6507cada0e2d1c62e3b4182759668bbfbf78dc7006981ba57564736f6c634300081c0033";

type CharacterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharacterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Character__factory extends ContractFactory {
  constructor(...args: CharacterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Character & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Character__factory {
    return super.connect(runner) as Character__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharacterInterface {
    return new Interface(_abi) as CharacterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Character {
    return new Contract(address, _abi, runner) as unknown as Character;
  }
}
