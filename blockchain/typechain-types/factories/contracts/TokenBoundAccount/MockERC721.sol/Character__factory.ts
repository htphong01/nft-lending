/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Character,
  CharacterInterface,
} from "../../../../contracts/TokenBoundAccount/MockERC721.sol/Character";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600981526020017f43686172616374657200000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4348415200000000000000000000000000000000000000000000000000000000815250816000908161008c9190610311565b50806001908161009c9190610311565b5050506100b9677bd5109ca0108f9760c01b6100be60201b60201c565b6103e3565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061014257607f821691505b602082108103610155576101546100fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610180565b6101c78683610180565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061020e610209610204846101df565b6101e9565b6101df565b9050919050565b6000819050919050565b610228836101f3565b61023c61023482610215565b84845461018d565b825550505050565b600090565b610251610244565b61025c81848461021f565b505050565b5b8181101561028057610275600082610249565b600181019050610262565b5050565b601f8211156102c5576102968161015b565b61029f84610170565b810160208510156102ae578190505b6102c26102ba85610170565b830182610261565b50505b505050565b600082821c905092915050565b60006102e8600019846008026102ca565b1980831691505092915050565b600061030183836102d7565b9150826002028217905092915050565b61031a826100c1565b67ffffffffffffffff811115610333576103326100cc565b5b61033d825461012a565b610348828285610284565b600060209050601f83116001811461037b5760008415610369578287015190505b61037385826102f5565b8655506103db565b601f1984166103898661015b565b60005b828110156103b15784890151825560018201915060208501945060208101905061038c565b868310156103ce57848901516103ca601f8916826102d7565b8355505b6001600288020188555050505b505050505050565b612490806103f26000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde14610284578063c87b56dd146102a0578063d0def521146102d0578063e985e9c5146102ec576100f5565b806370a08231146101fc578063714cff561461022c57806395d89b411461024a578063a22cb46514610268576100f5565b8063095ea7b3116100d3578063095ea7b31461017857806323b872dd1461019457806342842e0e146101b05780636352211e146101cc576100f5565b806301ffc9a7146100fa57806306fdde031461012a578063081812fc14610148575b600080fd5b610114600480360381019061010f91906118e8565b61031c565b6040516101219190611930565b60405180910390f35b61013261037d565b60405161013f91906119db565b60405180910390f35b610162600480360381019061015d9190611a33565b61040f565b60405161016f9190611aa1565b60405180910390f35b610192600480360381019061018d9190611ae8565b61042b565b005b6101ae60048036038101906101a99190611b28565b610441565b005b6101ca60048036038101906101c59190611b28565b610543565b005b6101e660048036038101906101e19190611a33565b610563565b6040516101f39190611aa1565b60405180910390f35b61021660048036038101906102119190611b7b565b610575565b6040516102239190611bb7565b60405180910390f35b61023461062f565b6040516102419190611bb7565b60405180910390f35b610252610635565b60405161025f91906119db565b60405180910390f35b610282600480360381019061027d9190611bfe565b6106c7565b005b61029e60048036038101906102999190611d73565b6106dd565b005b6102ba60048036038101906102b59190611a33565b610702565b6040516102c791906119db565b60405180910390f35b6102ea60048036038101906102e59190611e97565b610815565b005b61030660048036038101906103019190611ef3565b6108c1565b6040516103139190611930565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610376575061037582610955565b5b9050919050565b60606000805461038c90611f62565b80601f01602080910402602001604051908101604052809291908181526020018280546103b890611f62565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b5050505050905090565b600061041a82610a37565b5061042482610abf565b9050919050565b61043d8282610438610afc565b610b04565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b35760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104aa9190611aa1565b60405180910390fd5b60006104c783836104c2610afc565b610b16565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461053d578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161053493929190611f93565b60405180910390fd5b50505050565b61055e838383604051806020016040528060008152506106dd565b505050565b600061056e82610a37565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e85760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105df9190611aa1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b60606001805461064490611f62565b80601f016020809104026020016040519081016040528092919081815260200182805461067090611f62565b80156106bd5780601f10610692576101008083540402835291602001916106bd565b820191906000526020600020905b8154815290600101906020018083116106a057829003601f168201915b5050505050905090565b6106d96106d2610afc565b8383610d30565b5050565b6106e8848484610441565b6106fc6106f3610afc565b85858585610e9f565b50505050565b606061070d82610a37565b50600060066000848152602001908152602001600020805461072e90611f62565b80601f016020809104026020016040519081016040528092919081815260200182805461075a90611f62565b80156107a75780601f1061077c576101008083540402835291602001916107a7565b820191906000526020600020905b81548152906001019060200180831161078a57829003601f168201915b5050505050905060006107b8611050565b905060008151036107cd578192505050610810565b6000825111156108025780826040516020016107ea929190612006565b60405160208183030381529060405292505050610810565b61080b84611067565b925050505b919050565b61082967e6a0bb321732cbea60c01b6110d0565b61083d67ee968fbf1741383160c01b6110d0565b6007600081548092919061085090612059565b9190505550610869677c1df51fd5ff93e760c01b6110d0565b61087d67a471dccdb0eb065760c01b6110d0565b610889826007546110d3565b61089d677dea4507d9c67aff60c01b6110d0565b6108b16764ab55410ee1bd7260c01b6110d0565b6108bd600754826110f1565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a2057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a305750610a2f8261114d565b5b9050919050565b600080610a43836111b7565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ab657826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610aad9190611bb7565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610b1183838360016111f4565b505050565b600080610b22846111b7565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b6457610b638184866113b9565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bf557610ba66000856000806111f4565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610c78576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da157816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610d989190611aa1565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e929190611930565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611049578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610efe94939291906120f6565b6020604051808303816000875af1925050508015610f3a57506040513d601f19601f82011682018060405250810190610f379190612157565b60015b610fbe573d8060008114610f6a576040519150601f19603f3d011682016040523d82523d6000602084013e610f6f565b606091505b506000815103610fb657836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fad9190611aa1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161103e9190611aa1565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b606061107282610a37565b50600061107d611050565b9050600081511161109d57604051806020016040528060008152506110c8565b806110a78461147d565b6040516020016110b8929190612006565b6040516020818303038152906040525b915050919050565b50565b6110ed82826040518060200160405280600081525061154b565b5050565b806006600084815260200190815260200160002090816111119190612330565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516111419190611bb7565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061122d5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561136157600061123d84610a37565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156112a857508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156112bb57506112b981846108c1565b155b156112fd57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016112f49190611aa1565b60405180910390fd5b811561135f57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6113c483838361156f565b61147857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361143957806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016114309190611bb7565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161146f929190612402565b60405180910390fd5b505050565b60606000600161148c84611630565b01905060008167ffffffffffffffff8111156114ab576114aa611c48565b5b6040519080825280601f01601f1916602001820160405280156114dd5781602001600182028036833780820191505090505b509050600082602001820190505b600115611540578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816115345761153361242b565b5b049450600085036114eb575b819350505050919050565b6115558383611783565b61156a611560610afc565b6000858585610e9f565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561162757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806115e857506115e784846108c1565b5b8061162657508273ffffffffffffffffffffffffffffffffffffffff1661160e83610abf565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061168e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816116845761168361242b565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106116cb576d04ee2d6d415b85acef810000000083816116c1576116c061242b565b5b0492506020810190505b662386f26fc1000083106116fa57662386f26fc1000083816116f0576116ef61242b565b5b0492506010810190505b6305f5e1008310611723576305f5e10083816117195761171861242b565b5b0492506008810190505b612710831061174857612710838161173e5761173d61242b565b5b0492506004810190505b6064831061176b57606483816117615761176061242b565b5b0492506002810190505b600a831061177a576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117f55760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117ec9190611aa1565b60405180910390fd5b600061180383836000610b16565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118775760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161186e9190611aa1565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118c581611890565b81146118d057600080fd5b50565b6000813590506118e2816118bc565b92915050565b6000602082840312156118fe576118fd611886565b5b600061190c848285016118d3565b91505092915050565b60008115159050919050565b61192a81611915565b82525050565b60006020820190506119456000830184611921565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561198557808201518184015260208101905061196a565b60008484015250505050565b6000601f19601f8301169050919050565b60006119ad8261194b565b6119b78185611956565b93506119c7818560208601611967565b6119d081611991565b840191505092915050565b600060208201905081810360008301526119f581846119a2565b905092915050565b6000819050919050565b611a10816119fd565b8114611a1b57600080fd5b50565b600081359050611a2d81611a07565b92915050565b600060208284031215611a4957611a48611886565b5b6000611a5784828501611a1e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a8b82611a60565b9050919050565b611a9b81611a80565b82525050565b6000602082019050611ab66000830184611a92565b92915050565b611ac581611a80565b8114611ad057600080fd5b50565b600081359050611ae281611abc565b92915050565b60008060408385031215611aff57611afe611886565b5b6000611b0d85828601611ad3565b9250506020611b1e85828601611a1e565b9150509250929050565b600080600060608486031215611b4157611b40611886565b5b6000611b4f86828701611ad3565b9350506020611b6086828701611ad3565b9250506040611b7186828701611a1e565b9150509250925092565b600060208284031215611b9157611b90611886565b5b6000611b9f84828501611ad3565b91505092915050565b611bb1816119fd565b82525050565b6000602082019050611bcc6000830184611ba8565b92915050565b611bdb81611915565b8114611be657600080fd5b50565b600081359050611bf881611bd2565b92915050565b60008060408385031215611c1557611c14611886565b5b6000611c2385828601611ad3565b9250506020611c3485828601611be9565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c8082611991565b810181811067ffffffffffffffff82111715611c9f57611c9e611c48565b5b80604052505050565b6000611cb261187c565b9050611cbe8282611c77565b919050565b600067ffffffffffffffff821115611cde57611cdd611c48565b5b611ce782611991565b9050602081019050919050565b82818337600083830152505050565b6000611d16611d1184611cc3565b611ca8565b905082815260208101848484011115611d3257611d31611c43565b5b611d3d848285611cf4565b509392505050565b600082601f830112611d5a57611d59611c3e565b5b8135611d6a848260208601611d03565b91505092915050565b60008060008060808587031215611d8d57611d8c611886565b5b6000611d9b87828801611ad3565b9450506020611dac87828801611ad3565b9350506040611dbd87828801611a1e565b925050606085013567ffffffffffffffff811115611dde57611ddd61188b565b5b611dea87828801611d45565b91505092959194509250565b600067ffffffffffffffff821115611e1157611e10611c48565b5b611e1a82611991565b9050602081019050919050565b6000611e3a611e3584611df6565b611ca8565b905082815260208101848484011115611e5657611e55611c43565b5b611e61848285611cf4565b509392505050565b600082601f830112611e7e57611e7d611c3e565b5b8135611e8e848260208601611e27565b91505092915050565b60008060408385031215611eae57611ead611886565b5b6000611ebc85828601611ad3565b925050602083013567ffffffffffffffff811115611edd57611edc61188b565b5b611ee985828601611e69565b9150509250929050565b60008060408385031215611f0a57611f09611886565b5b6000611f1885828601611ad3565b9250506020611f2985828601611ad3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611f7a57607f821691505b602082108103611f8d57611f8c611f33565b5b50919050565b6000606082019050611fa86000830186611a92565b611fb56020830185611ba8565b611fc26040830184611a92565b949350505050565b600081905092915050565b6000611fe08261194b565b611fea8185611fca565b9350611ffa818560208601611967565b80840191505092915050565b60006120128285611fd5565b915061201e8284611fd5565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612064826119fd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120965761209561202a565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006120c8826120a1565b6120d281856120ac565b93506120e2818560208601611967565b6120eb81611991565b840191505092915050565b600060808201905061210b6000830187611a92565b6121186020830186611a92565b6121256040830185611ba8565b818103606083015261213781846120bd565b905095945050505050565b600081519050612151816118bc565b92915050565b60006020828403121561216d5761216c611886565b5b600061217b84828501612142565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026121e67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826121a9565b6121f086836121a9565b95508019841693508086168417925050509392505050565b6000819050919050565b600061222d612228612223846119fd565b612208565b6119fd565b9050919050565b6000819050919050565b61224783612212565b61225b61225382612234565b8484546121b6565b825550505050565b600090565b612270612263565b61227b81848461223e565b505050565b5b8181101561229f57612294600082612268565b600181019050612281565b5050565b601f8211156122e4576122b581612184565b6122be84612199565b810160208510156122cd578190505b6122e16122d985612199565b830182612280565b50505b505050565b600082821c905092915050565b6000612307600019846008026122e9565b1980831691505092915050565b600061232083836122f6565b9150826002028217905092915050565b6123398261194b565b67ffffffffffffffff81111561235257612351611c48565b5b61235c8254611f62565b6123678282856122a3565b600060209050601f83116001811461239a5760008415612388578287015190505b6123928582612314565b8655506123fa565b601f1984166123a886612184565b60005b828110156123d0578489015182556001820191506020850194506020810190506123ab565b868310156123ed57848901516123e9601f8916826122f6565b8355505b6001600288020188555050505b505050505050565b60006040820190506124176000830185611a92565b6124246020830184611ba8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea26469706673582212209c70a5143a3a24c60a71feb5c9bc663929bae344ae214fdb3048e9566e143fe264736f6c634300081c0033";

type CharacterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharacterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Character__factory extends ContractFactory {
  constructor(...args: CharacterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Character & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Character__factory {
    return super.connect(runner) as Character__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharacterInterface {
    return new Interface(_abi) as CharacterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Character {
    return new Contract(address, _abi, runner) as unknown as Character;
  }
}
