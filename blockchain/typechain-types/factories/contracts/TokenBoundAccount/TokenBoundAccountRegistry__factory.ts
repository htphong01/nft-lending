/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TokenBoundAccountRegistry,
  TokenBoundAccountRegistryInterface,
} from "../../../contracts/TokenBoundAccount/TokenBoundAccountRegistry";

const _abi = [
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506108fe8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063c1340f691461006b575b600080fd5b610055600480360381019061005091906105ab565b61009b565b6040516100629190610635565b60405180910390f35b610085600480360381019061008091906105ab565b610132565b6040516100929190610635565b60405180910390f35b60006100b167b0fc06577d1c69b660c01b610313565b6100c5670470402aa972521460c01b610313565b6100d967766300e9eea6999c60c01b610313565b60006100e88787878787610316565b8051906020012090506101056788d64ec63532e52f60c01b610313565b61011967ae8955beb8bd46fd60c01b610313565b6101268360001b826103a6565b91505095945050505050565b6000610148674f3cd4f8eb998a0360c01b610313565b61015c67544badd3a2654bba60c01b610313565b6101706784273bf1988efcc560c01b610313565b600061017f8787878787610316565b90506101956799da44b420d86efb60c01b610313565b6101a967503452efc11b038860c01b610313565b60006101bf8460001b83805190602001206103a6565b90506101d567730f643fd3dcb71560c01b610313565b6101e9676ef6565cd04f405b60c01b610313565b60008173ffffffffffffffffffffffffffffffffffffffff163b1461023a5761021c67ae917439a22dd76160c01b610313565b61023067d78e48c51d4c219560c01b610313565b809250505061030a565b61024e6785f9909e8320df1760c01b610313565b61026267dc946815c88bd4e160c01b610313565b610276670bf1f9b9782d251760c01b610313565b7f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f8189898989896040516102af9695949392919061065f565b60405180910390a16102cb67d4217b733c37dd2c60c01b610313565b6102da60008560001b846103bb565b90506102f0672d8086c9c428cd3560c01b610313565b6103046794e3665d3dca515d60c01b610313565b80925050505b95945050505050565b50565b606061032c670ba84da9fa043da960c01b6104ce565b610340670bfdf3d76a216c6360c01b6104ce565b610354674975f714f2e172b360c01b6104ce565b858286868660405160200161036c94939291906106c0565b60405160208183030381529060405260405160200161038c929190610861565b604051602081830303815290604052905095945050505050565b60006103b38383306104d1565b905092915050565b6000834710156104045747846040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016103fb92919061089f565b60405180910390fd5b600082510361043f576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f590503d151981151615610461576040513d6000823e3d81fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104c7576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b50565b6000604051836040820152846020820152828152600b810160ff815373ffffffffffffffffffffffffffffffffffffffff6055822016925050509392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061054282610517565b9050919050565b61055281610537565b811461055d57600080fd5b50565b60008135905061056f81610549565b92915050565b6000819050919050565b61058881610575565b811461059357600080fd5b50565b6000813590506105a58161057f565b92915050565b600080600080600060a086880312156105c7576105c6610512565b5b60006105d588828901610560565b95505060206105e688828901610596565b94505060406105f788828901610560565b935050606061060888828901610596565b925050608061061988828901610596565b9150509295509295909350565b61062f81610537565b82525050565b600060208201905061064a6000830184610626565b92915050565b61065981610575565b82525050565b600060c0820190506106746000830189610626565b6106816020830188610626565b61068e6040830187610650565b61069b6060830186610626565b6106a86080830185610650565b6106b560a0830184610650565b979650505050505050565b60006080820190506106d56000830187610650565b6106e26020830186610650565b6106ef6040830185610626565b6106fc6060830184610650565b95945050505050565b600081905092915050565b7f3d60ad80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b6000610746601483610705565b915061075182610710565b601482019050919050565b60008160601b9050919050565b60006107748261075c565b9050919050565b600061078682610769565b9050919050565b61079e61079982610537565b61077b565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b60006107da600f83610705565b91506107e5826107a4565b600f82019050919050565b600081519050919050565b600081905092915050565b60005b83811015610824578082015181840152602081019050610809565b60008484015250505050565b600061083b826107f0565b61084581856107fb565b9350610855818560208601610806565b80840191505092915050565b600061086c82610739565b9150610878828561078d565b601482019150610887826107cd565b91506108938284610830565b91508190509392505050565b60006040820190506108b46000830185610650565b6108c16020830184610650565b939250505056fea2646970667358221220dad695f13e69459f66601f604867a84570051be29e25a2ea3741b938ad932a2a64736f6c634300081c0033";

type TokenBoundAccountRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBoundAccountRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBoundAccountRegistry__factory extends ContractFactory {
  constructor(...args: TokenBoundAccountRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TokenBoundAccountRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TokenBoundAccountRegistry__factory {
    return super.connect(runner) as TokenBoundAccountRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBoundAccountRegistryInterface {
    return new Interface(_abi) as TokenBoundAccountRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TokenBoundAccountRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TokenBoundAccountRegistry;
  }
}
