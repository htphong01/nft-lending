/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LendingStake,
  LendingStakeInterface,
} from "../../../contracts/LendingPool/LendingStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_wXENE",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "addressLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAddressByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wXENE",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161107438038061107483398101604081905261002f916100b6565b600080546001600160a01b039586166001600160a01b03199182161782556001805495909616941693909317909355600255600a8290556040805160808101825283815260208101839052908101829052606001819052600391909155600481905560058190556006556100fe565b6001600160a01b03811681146100b357600080fd5b50565b600080600080608085870312156100cc57600080fd5b84516100d78161009e565b60208601519094506100e88161009e565b6040860151606090960151949790965092505050565b610f678061010d6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b619738a116100a2578063ce10cf8811610071578063ce10cf8814610253578063db2e21bc14610266578063dc8818881461026e578063e3161ddd14610276578063f40f0f521461027e57600080fd5b8063b619738a14610212578063b6b55f2514610225578063b759f95414610238578063b88a802f1461024b57600080fd5b80636b0c341b116100de5780636b0c341b146101c1578063715b208b146101c95780638ae39cac146101de578063a59a9973146101e757600080fd5b80631959a002146101105780632e1a7d4d1461015f57806348cd4cb1146101745780635a2f3d091461018b575b600080fd5b61013f61011e366004610dc7565b60076020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61017261016d366004610df0565b610291565b005b61017d600a5481565b604051908152602001610156565b6003546004546005546006546101a19392919084565b604080519485526020850193909352918301526060820152608001610156565b61017d610416565b6101d161046d565b6040516101569190610e09565b61017d60025481565b6001546101fa906001600160a01b031681565b6040516001600160a01b039091168152602001610156565b6000546101fa906001600160a01b031681565b610172610233366004610df0565b61047e565b610172610246366004610df0565b6105d4565b6101726106bc565b6101fa610261366004610df0565b6108a3565b6101726108b6565b61017d61092b565b610172610937565b61017d61028c366004610dc7565b6109bf565b600081116102d45760405162461bcd60e51b815260206004820152600b60248201526a616d6f756e74207a65726f60a81b60448201526064015b60405180910390fd5b336000908152600760205260409020805482111561032b5760405162461bcd60e51b81526020600482015260146024820152730eed2e8d0c8e4c2ee7440dcdee840cadcdeeaced60631b60448201526064016102cb565b610333610937565b60005461034a906001600160a01b03163384610a8b565b60028101546001820154600454835464e8d4a510009161036991610e6b565b6103739190610e82565b61037d9190610ea4565b6103879190610eb7565b60028201558054610399908390610ea4565b80825560045464e8d4a51000916103b09190610e6b565b6103ba9190610e82565b60018201556005546103cd908390610ea4565b6005556103db600833610aef565b5060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b600380546000919082904311801561042f575060055415155b15610458576000610444836000015443610b0b565b9050600254816104549190610e6b565b9150505b600654610466908290610eb7565b9250505090565b60606104796008610b17565b905090565b600081116104bc5760405162461bcd60e51b815260206004820152600b60248201526a616d6f756e74207a65726f60a81b60448201526064016102cb565b3360009081526007602052604090206104d3610937565b6000546104eb906001600160a01b0316333085610b24565b80541580156104fc57506002810154155b801561050a57506001810154155b1561051c5761051a600833610b63565b505b60028101546001820154600454835464e8d4a510009161053b91610e6b565b6105459190610e82565b61054f9190610ea4565b6105599190610eb7565b6002820155805461056b908390610eb7565b80825560045464e8d4a51000916105829190610e6b565b61058c9190610e82565b600182015560055461059f908390610eb7565b60055560405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200161040a565b6001546001600160a01b0316331461063f5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206c656e64696e6720706f6f6c2063616e2063616c6c207468697320604482015267333ab731ba34b7b760c11b60648201526084016102cb565b60005460015460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af1158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b89190610eca565b5050565b3360009081526007602052604090206106d3610937565b60008160020154826001015464e8d4a5100060036001015485600001546106fa9190610e6b565b6107049190610e82565b61070e9190610ea4565b6107189190610eb7565b60006002840155600454835491925064e8d4a51000916107389190610e6b565b6107429190610e82565b60018301556006546107548282610ea4565b600655600080546001546040516370a0823160e01b81526001600160a01b039182166004820152849291909116906370a0823190602401602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190610eec565b6107d69085610e6b565b6107e09190610e82565b6001546000546040516371f3cd0d60e01b81526001600160a01b0391821660048201526024810184905292935016906371f3cd0d90604401600060405180830381600087803b15801561083257600080fd5b505af1158015610846573d6000803e3d6000fd5b505060015460005461086893506001600160a01b039081169250163384610b24565b60405183815233907fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9060200160405180910390a250505050565b60006108b0600883610b78565b92915050565b3360008181526007602052604081208054915490926108e0926001600160a01b0390921691610a8b565b805460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a2600080825560018201819055600290910155565b60006104796008610b84565b600354431161094257565b6005546000819003610955575043600355565b600061096660036000015443610b0b565b90506000600254826109789190610e6b565b600654909150610989908290610eb7565b6006558261099c64e8d4a5100083610e6b565b6109a69190610e82565b6004546109b39190610eb7565b60045550504360035550565b6001600160a01b0381166000908152600760205260408120600454600554600380549093929190431180156109f357508015155b15610a45576000610a08856000015443610b0b565b9050600060025482610a1a9190610e6b565b905082610a2c64e8d4a5100083610e6b565b610a369190610e82565b610a409085610eb7565b935050505b60028301546001840154845464e8d4a5100090610a63908690610e6b565b610a6d9190610e82565b610a779190610ea4565b610a819190610eb7565b9695505050505050565b6040516001600160a01b03838116602483015260448201839052610aea91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610b8e565b505050565b6000610b04836001600160a01b038416610bff565b9392505050565b6000610b048383610ea4565b60606000610b0483610cf2565b6040516001600160a01b038481166024830152838116604483015260648201839052610b5d9186918216906323b872dd90608401610ab8565b50505050565b6000610b04836001600160a01b038416610d4e565b6000610b048383610d9d565b60006108b0825490565b600080602060008451602086016000885af180610bb1576040513d6000823e3d81fd5b50506000513d91508115610bc9578060011415610bd6565b6001600160a01b0384163b155b15610b5d57604051635274afe760e01b81526001600160a01b03851660048201526024016102cb565b60008181526001830160205260408120548015610ce8576000610c23600183610ea4565b8554909150600090610c3790600190610ea4565b9050808214610c9c576000866000018281548110610c5757610c57610f05565b9060005260206000200154905080876000018481548110610c7a57610c7a610f05565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610cad57610cad610f1b565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108b0565b60009150506108b0565b606081600001805480602002602001604051908101604052809291908181526020018280548015610d4257602002820191906000526020600020905b815481526020019060010190808311610d2e575b50505050509050919050565b6000818152600183016020526040812054610d95575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108b0565b5060006108b0565b6000826000018281548110610db457610db4610f05565b9060005260206000200154905092915050565b600060208284031215610dd957600080fd5b81356001600160a01b0381168114610b0457600080fd5b600060208284031215610e0257600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b81811015610e4a5783516001600160a01b0316835260209384019390920191600101610e23565b509095945050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108b0576108b0610e55565b600082610e9f57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156108b0576108b0610e55565b808201808211156108b0576108b0610e55565b600060208284031215610edc57600080fd5b81518015158114610b0457600080fd5b600060208284031215610efe57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212201ec87f16b1194bb95d95481dc97454415cd62d1da77e11f97d39133b4820481c64736f6c634300081c0033";

type LendingStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingStake__factory extends ContractFactory {
  constructor(...args: LendingStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wXENE: AddressLike,
    _lendingPool: AddressLike,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _wXENE,
      _lendingPool,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  override deploy(
    _wXENE: AddressLike,
    _lendingPool: AddressLike,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _wXENE,
      _lendingPool,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<
      LendingStake & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingStake__factory {
    return super.connect(runner) as LendingStake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingStakeInterface {
    return new Interface(_abi) as LendingStakeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LendingStake {
    return new Contract(address, _abi, runner) as unknown as LendingStake;
  }
}
