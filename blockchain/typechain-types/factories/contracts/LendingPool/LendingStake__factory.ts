/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LendingStake,
  LendingStakeInterface,
} from "../../../contracts/LendingPool/LendingStake";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_wXENE",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingPool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "RewardBalanceTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "addressLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAddressByIndex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accRewardPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakedSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPending",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wXENE",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161112838038061112883398101604081905261002f916100ba565b6001600081815581546001600160a01b03199081166001600160a01b0397881617909255600280549092169490951693909317909255600355600b819055604080516080810182528281526020810184905290810183905260600182905260045560058190556006819055600755610102565b6001600160a01b03811681146100b757600080fd5b50565b600080600080608085870312156100d057600080fd5b84516100db816100a2565b60208601519094506100ec816100a2565b6040860151606090960151949790965092505050565b611017806101116000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063b619738a116100a2578063ce10cf8811610071578063ce10cf8814610253578063db2e21bc14610266578063dc8818881461026e578063e3161ddd14610276578063f40f0f521461027e57600080fd5b8063b619738a14610212578063b6b55f2514610225578063b759f95414610238578063b88a802f1461024b57600080fd5b80636b0c341b116100de5780636b0c341b146101c1578063715b208b146101c95780638ae39cac146101de578063a59a9973146101e757600080fd5b80631959a002146101105780632e1a7d4d1461015f57806348cd4cb1146101745780635a2f3d091461018b575b600080fd5b61013f61011e366004610e83565b60086020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61017261016d366004610eac565b610291565b005b61017d600b5481565b604051908152602001610156565b6004546005546006546007546101a19392919084565b604080519485526020850193909352918301526060820152608001610156565b61017d61041b565b6101d1610472565b6040516101569190610ec5565b61017d60035481565b6002546101fa906001600160a01b031681565b6040516001600160a01b039091168152602001610156565b6001546101fa906001600160a01b031681565b610172610233366004610eac565b610483565b610172610246366004610eac565b6105ca565b6101726106b2565b6101fa610261366004610eac565b610887565b61017261089a565b61017d610916565b610172610922565b61017d61028c366004610e83565b6109a0565b610299610a56565b600081116102dc5760405162461bcd60e51b815260206004820152600b60248201526a616d6f756e74207a65726f60a81b60448201526064015b60405180910390fd5b33600090815260086020526040902080548211156103335760405162461bcd60e51b81526020600482015260146024820152730eed2e8d0c8e4c2ee7440dcdee840cadcdeeaced60631b60448201526064016102d3565b61033b610922565b600154610352906001600160a01b03163384610a80565b6002810154600182015460055483546103709164e8d4a51000610ae4565b61037a9190610f27565b6103849190610f3a565b60028201558054610396908390610f27565b8082556005546103ac919064e8d4a51000610ae4565b60018201556006546103bf908390610f27565b60065580546000036103d8576103d6600933610ba0565b505b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2506104186001600055565b50565b6004805460009190829043118015610434575060065415155b1561045d576000610449836000015443610bb5565b9050600354816104599190610f4d565b9150505b60075461046b908290610f3a565b9250505090565b606061047e6009610bc1565b905090565b600081116104c15760405162461bcd60e51b815260206004820152600b60248201526a616d6f756e74207a65726f60a81b60448201526064016102d3565b3360009081526008602052604090206104d8610922565b6001546104f0906001600160a01b0316333085610bce565b805415801561050157506002810154155b801561050f57506001810154155b156105215761051f600933610c0d565b505b60028101546001820154600554835461053f9164e8d4a51000610ae4565b6105499190610f27565b6105539190610f3a565b60028201558054610565908390610f3a565b80825560055461057b919064e8d4a51000610ae4565b600182015560065461058e908390610f3a565b60065560405182815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a25050565b6002546001600160a01b031633146106355760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206c656e64696e6720706f6f6c2063616e2063616c6c207468697320604482015267333ab731ba34b7b760c11b60648201526084016102d3565b60015460025460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561068a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ae9190610f64565b5050565b6106ba610a56565b3360009081526008602052604090206106d1610922565b60055481546000916106e9919064e8d4a51000610ae4565b9050600082600201548360010154836107029190610f27565b61070c9190610f3a565b6001546002546040516370a0823160e01b81526001600160a01b03918216600482015292935016906370a0823190602401602060405180830381865afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190610f86565b81111561079e57604051637182cb8b60e01b815260040160405180910390fd5b60006002840155600183018290556007546107b98282610f27565b6007556002546001546040516371f3cd0d60e01b81526001600160a01b039182166004820152602481018590529116906371f3cd0d90604401600060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505060025460015461084293506001600160a01b039081169250163385610bce565b60405182815233907fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9060200160405180910390a2505050506108856001600055565b565b6000610894600983610c22565b92915050565b336000818152600860205260409020805460015491926108c3926001600160a01b031691610a80565b805460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a260008082556001820181905560028201556106ae600933610ba0565b600061047e6009610c2e565b600454431161092d57565b6006546000819003610940575043600455565b600061095160046000015443610bb5565b90506000600354826109639190610f4d565b600754909150610974908290610f3a565b6007556109878164e8d4a5100085610ae4565b6005546109949190610f3a565b60055550504360045550565b6001600160a01b0381166000908152600860205260408120600554600654600480549093929190431180156109d457508015155b15610a1c5760006109e9856000015443610bb5565b90506000600354826109fb9190610f4d565b9050610a0d8164e8d4a5100085610ae4565b610a179085610f3a565b935050505b600283015460018401548454610a38908564e8d4a51000610ae4565b610a429190610f27565b610a4c9190610f3a565b9695505050505050565b600260005403610a7957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6040516001600160a01b03838116602483015260448201839052610adf91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610c38565b505050565b6000838302816000198587098281108382030391505080600003610b1b57838281610b1157610b11610f9f565b0492505050610b99565b808411610b3257610b326003851502601118610ca9565b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000610b99836001600160a01b038416610cbb565b6000610b998383610f27565b60606000610b9983610dae565b6040516001600160a01b038481166024830152838116604483015260648201839052610c079186918216906323b872dd90608401610aad565b50505050565b6000610b99836001600160a01b038416610e0a565b6000610b998383610e59565b6000610894825490565b600080602060008451602086016000885af180610c5b576040513d6000823e3d81fd5b50506000513d91508115610c73578060011415610c80565b6001600160a01b0384163b155b15610c0757604051635274afe760e01b81526001600160a01b03851660048201526024016102d3565b634e487b71600052806020526024601cfd5b60008181526001830160205260408120548015610da4576000610cdf600183610f27565b8554909150600090610cf390600190610f27565b9050808214610d58576000866000018281548110610d1357610d13610fb5565b9060005260206000200154905080876000018481548110610d3657610d36610fb5565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d6957610d69610fcb565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610894565b6000915050610894565b606081600001805480602002602001604051908101604052809291908181526020018280548015610dfe57602002820191906000526020600020905b815481526020019060010190808311610dea575b50505050509050919050565b6000818152600183016020526040812054610e5157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610894565b506000610894565b6000826000018281548110610e7057610e70610fb5565b9060005260206000200154905092915050565b600060208284031215610e9557600080fd5b81356001600160a01b0381168114610b9957600080fd5b600060208284031215610ebe57600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b81811015610f065783516001600160a01b0316835260209384019390920191600101610edf565b509095945050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561089457610894610f11565b8082018082111561089457610894610f11565b808202811582820484141761089457610894610f11565b600060208284031215610f7657600080fd5b81518015158114610b9957600080fd5b600060208284031215610f9857600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212203367a61b4f40487e4bdd20ba1e5ccd733b412b4f4e938a037a45d7902a9f704364736f6c634300081c0033";

type LendingStakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingStakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingStake__factory extends ContractFactory {
  constructor(...args: LendingStakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _wXENE: AddressLike,
    _lendingPool: AddressLike,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _wXENE,
      _lendingPool,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  override deploy(
    _wXENE: AddressLike,
    _lendingPool: AddressLike,
    _rewardPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _wXENE,
      _lendingPool,
      _rewardPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<
      LendingStake & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingStake__factory {
    return super.connect(runner) as LendingStake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingStakeInterface {
    return new Interface(_abi) as LendingStakeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LendingStake {
    return new Contract(address, _abi, runner) as unknown as LendingStake;
  }
}
