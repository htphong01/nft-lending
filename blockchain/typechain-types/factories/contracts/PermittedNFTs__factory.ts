/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PermittedNFTs,
  PermittedNFTsInterface,
} from "../../contracts/PermittedNFTs";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPermitted",
        type: "bool",
      },
    ],
    name: "NFTPermit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    name: "getNFTPermit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPermitted",
        type: "bool",
      },
    ],
    name: "setNFTPermit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_nftContracts",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "_isPermitted",
        type: "bool",
      },
    ],
    name: "setNFTPermits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161067e38038061067e83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610581806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632a27811e146100675780636651f11d1461007c578063715018a6146100bd5780638da5cb5b146100c5578063b06992ef146100e0578063f2fde38b146100f3575b600080fd5b61007a610075366004610407565b610106565b005b6100a861008a3660046104e9565b6001600160a01b031660009081526001602052604090205460ff1690565b60405190151581526020015b60405180910390f35b61007a61011c565b6000546040516001600160a01b0390911681526020016100b4565b61007a6100ee36600461050b565b610130565b61007a6101013660046104e9565b610142565b61010e610185565b61011882826101b2565b5050565b610124610185565b61012e60006102c0565b565b610138610185565b6101188282610310565b61014a610185565b6001600160a01b03811661017957604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610182816102c0565b50565b6000546001600160a01b0316331461012e5760405163118cdaa760e01b8152336004820152602401610170565b60008251116102035760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c656e677468206e6674436f6e74726163747300000000006044820152606401610170565b60005b82518110156102bb57600083828151811061022357610223610535565b6020026020010151905060006001600160a01b0316816001600160a01b03160361028f5760405162461bcd60e51b815260206004820152601b60248201527f6e6674436f6e7472616374206973207a65726f206164647265737300000000006044820152606401610170565b6001600160a01b03166000908152600160208190526040909120805460ff191684151517905501610206565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166103665760405162461bcd60e51b815260206004820152601b60248201527f6e6674436f6e7472616374206973207a65726f206164647265737300000000006044820152606401610170565b6001600160a01b038216600081815260016020908152604091829020805460ff191685151590811790915591519182527f9f64376b4ce09200833c49794198c90facdc3856721f47e050d031d5b923438f910160405180910390a25050565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146103f257600080fd5b919050565b803580151581146103f257600080fd5b6000806040838503121561041a57600080fd5b823567ffffffffffffffff81111561043157600080fd5b8301601f8101851361044257600080fd5b803567ffffffffffffffff81111561045c5761045c6103c5565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715610489576104896103c5565b6040529182526020818401810192908101888411156104a757600080fd5b6020850194505b838510156104cd576104bf856103db565b8152602094850194016104ae565b5094506104e092505050602084016103f7565b90509250929050565b6000602082840312156104fb57600080fd5b610504826103db565b9392505050565b6000806040838503121561051e57600080fd5b610527836103db565b91506104e0602084016103f7565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a0717a32a962b5041425cf5783ca9a2acdcf59488a40cf4b1c182353af78805864736f6c634300081c0033";

type PermittedNFTsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermittedNFTsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermittedNFTs__factory extends ContractFactory {
  constructor(...args: PermittedNFTsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override deploy(
    _admin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_admin, overrides || {}) as Promise<
      PermittedNFTs & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermittedNFTs__factory {
    return super.connect(runner) as PermittedNFTs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermittedNFTsInterface {
    return new Interface(_abi) as PermittedNFTsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PermittedNFTs {
    return new Contract(address, _abi, runner) as unknown as PermittedNFTs;
  }
}
