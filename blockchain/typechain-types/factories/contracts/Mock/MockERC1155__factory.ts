/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../contracts/Mock/MockERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082019091526012815271343a3a38399d1797b4b8333997973539b7b760711b602082015261004381610049565b506101b6565b600261005582826100f8565b5050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061008357607f821691505b6020821081036100a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100f357806000526020600020601f840160051c810160208510156100d05750805b601f840160051c820191505b818110156100f057600081556001016100dc565b50505b505050565b81516001600160401b0381111561011157610111610059565b6101258161011f845461006f565b846100a9565b6020601f82116001811461015957600083156101415750848201515b600019600385901b1c1916600184901b1784556100f0565b600084815260208120601f198516915b828110156101895787850151825560209485019460019092019101610169565b50848210156101a75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61118a806101c56000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f414610133578063a22cb46514610153578063c1292cc314610166578063e985e9c51461016f578063f242432a1461018257600080fd5b8062fdd58e146100a257806301ffc9a7146100c85780630e89341c146100eb5780632eb2c2d61461010b57806340c10f1914610120575b600080fd5b6100b56100b0366004610b1d565b610195565b6040519081526020015b60405180910390f35b6100db6100d6366004610b60565b6101bd565b60405190151581526020016100bf565b6100fe6100f9366004610b84565b61020d565b6040516100bf9190610be3565b61011e610119366004610d3e565b6102a1565b005b61011e61012e366004610b1d565b61030d565b610146610141366004610df4565b610340565b6040516100bf9190610ef9565b61011e610161366004610f0c565b61040d565b6100b560035481565b6100db61017d366004610f48565b610418565b61011e610190366004610f7b565b610446565b6000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806101ee57506001600160e01b031982166303a24d0760e21b145b806101b757506301ffc9a760e01b6001600160e01b03198316146101b7565b60606002805461021c90610fd4565b80601f016020809104026020016040519081016040528092919081815260200182805461024890610fd4565b80156102955780601f1061026a57610100808354040283529160200191610295565b820191906000526020600020905b81548152906001019060200180831161027857829003601f168201915b50505050509050919050565b336001600160a01b03861681148015906102c257506102c08682610418565b155b156102f85760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044015b60405180910390fd5b61030586868686866104a5565b505050505050565b61033c8260036000815461032090611024565b919050819055836040518060200160405280600081525061050c565b5050565b606081518351146103715781518351604051635b05999160e01b8152600481019290925260248201526044016102ef565b6000835167ffffffffffffffff81111561038d5761038d610bf6565b6040519080825280602002602001820160405280156103b6578160200160208202803683370190505b50905060005b8451811015610405576020808202860101516103e090602080840287010151610195565b8282815181106103f2576103f261103d565b60209081029190910101526001016103bc565b509392505050565b61033c338383610569565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b336001600160a01b038616811480159061046757506104658682610418565b155b156104985760405163711bec9160e11b81526001600160a01b038083166004830152871660248201526044016102ef565b61030586868686866105ff565b6001600160a01b0384166104cf57604051632bfa23e760e11b8152600060048201526024016102ef565b6001600160a01b0385166104f857604051626a0d4560e21b8152600060048201526024016102ef565b610505858585858561068d565b5050505050565b6001600160a01b03841661053657604051632bfa23e760e11b8152600060048201526024016102ef565b6040805160018082526020820186905281830190815260608201859052608082019092529061030560008784848761068d565b6001600160a01b0382166105925760405162ced3e160e81b8152600060048201526024016102ef565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661062957604051632bfa23e760e11b8152600060048201526024016102ef565b6001600160a01b03851661065257604051626a0d4560e21b8152600060048201526024016102ef565b60408051600180825260208201869052818301908152606082018590526080820190925290610684878784848761068d565b50505050505050565b610699858585856106e0565b6001600160a01b0384161561050557825133906001036106d257602084810151908401516106cb8389898585896108f4565b5050610305565b610305818787878787610a18565b805182511461070f5781518151604051635b05999160e01b8152600481019290925260248201526044016102ef565b3360005b8351811015610815576020818102858101820151908501909101516001600160a01b038816156107c6576000828152602081815260408083206001600160a01b038c1684529091529020548181101561079f576040516303dee4c560e01b81526001600160a01b038a1660048201526024810182905260448101839052606481018490526084016102ef565b6000838152602081815260408083206001600160a01b038d16845290915290209082900390555b6001600160a01b0387161561080b576000828152602081815260408083206001600160a01b038b16845290915281208054839290610805908490611053565b90915550505b5050600101610713565b5082516001036108965760208301516000906020840151909150856001600160a01b0316876001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051610887929190918252602082015260400190565b60405180910390a45050610505565b836001600160a01b0316856001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb86866040516108e5929190611066565b60405180910390a45050505050565b6001600160a01b0384163b156103055760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906109389089908990889088908890600401611094565b6020604051808303816000875af1925050508015610973575060408051601f3d908101601f19168201909252610970918101906110d9565b60015b6109dc573d8080156109a1576040519150601f19603f3d011682016040523d82523d6000602084013e6109a6565b606091505b5080516000036109d457604051632bfa23e760e11b81526001600160a01b03861660048201526024016102ef565b805181602001fd5b6001600160e01b0319811663f23a6e6160e01b1461068457604051632bfa23e760e11b81526001600160a01b03861660048201526024016102ef565b6001600160a01b0384163b156103055760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a5c90899089908890889088906004016110f6565b6020604051808303816000875af1925050508015610a97575060408051601f3d908101601f19168201909252610a94918101906110d9565b60015b610ac5573d8080156109a1576040519150601f19603f3d011682016040523d82523d6000602084013e6109a6565b6001600160e01b0319811663bc197c8160e01b1461068457604051632bfa23e760e11b81526001600160a01b03861660048201526024016102ef565b80356001600160a01b0381168114610b1857600080fd5b919050565b60008060408385031215610b3057600080fd5b610b3983610b01565b946020939093013593505050565b6001600160e01b031981168114610b5d57600080fd5b50565b600060208284031215610b7257600080fd5b8135610b7d81610b47565b9392505050565b600060208284031215610b9657600080fd5b5035919050565b6000815180845260005b81811015610bc357602081850181015186830182015201610ba7565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610b7d6020830184610b9d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c3557610c35610bf6565b604052919050565b600067ffffffffffffffff821115610c5757610c57610bf6565b5060051b60200190565b600082601f830112610c7257600080fd5b8135610c85610c8082610c3d565b610c0c565b8082825260208201915060208360051b860101925085831115610ca757600080fd5b602085015b83811015610cc4578035835260209283019201610cac565b5095945050505050565b600082601f830112610cdf57600080fd5b813567ffffffffffffffff811115610cf957610cf9610bf6565b610d0c601f8201601f1916602001610c0c565b818152846020838601011115610d2157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d5657600080fd5b610d5f86610b01565b9450610d6d60208701610b01565b9350604086013567ffffffffffffffff811115610d8957600080fd5b610d9588828901610c61565b935050606086013567ffffffffffffffff811115610db257600080fd5b610dbe88828901610c61565b925050608086013567ffffffffffffffff811115610ddb57600080fd5b610de788828901610cce565b9150509295509295909350565b60008060408385031215610e0757600080fd5b823567ffffffffffffffff811115610e1e57600080fd5b8301601f81018513610e2f57600080fd5b8035610e3d610c8082610c3d565b8082825260208201915060208360051b850101925087831115610e5f57600080fd5b6020840193505b82841015610e8857610e7784610b01565b825260209384019390910190610e66565b9450505050602083013567ffffffffffffffff811115610ea757600080fd5b610eb385828601610c61565b9150509250929050565b600081518084526020840193506020830160005b82811015610eef578151865260209586019590910190600101610ed1565b5093949350505050565b602081526000610b7d6020830184610ebd565b60008060408385031215610f1f57600080fd5b610f2883610b01565b915060208301358015158114610f3d57600080fd5b809150509250929050565b60008060408385031215610f5b57600080fd5b610f6483610b01565b9150610f7260208401610b01565b90509250929050565b600080600080600060a08688031215610f9357600080fd5b610f9c86610b01565b9450610faa60208701610b01565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ddb57600080fd5b600181811c90821680610fe857607f821691505b60208210810361100857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016110365761103661100e565b5060010190565b634e487b7160e01b600052603260045260246000fd5b808201808211156101b7576101b761100e565b6040815260006110796040830185610ebd565b828103602084015261108b8185610ebd565b95945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906110ce90830184610b9d565b979650505050505050565b6000602082840312156110eb57600080fd5b8151610b7d81610b47565b6001600160a01b0386811682528516602082015260a06040820181905260009061112290830186610ebd565b82810360608401526111348186610ebd565b905082810360808401526111488185610b9d565b9897505050505050505056fea2646970667358221220b7f48d413b56bf523edf0e4c2de24dd75e2f902d71a897e1e7c4946e84ce02fe64736f6c634300081c0033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC1155__factory {
    return super.connect(runner) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new Interface(_abi) as MockERC1155Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC1155 {
    return new Contract(address, _abi, runner) as unknown as MockERC1155;
  }
}
