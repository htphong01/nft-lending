/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../contracts/Mock/MockERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC1155InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idsLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "valuesLength",
        type: "uint256",
      },
    ],
    name: "ERC1155InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC1155InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC1155InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC1155InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC1155MissingApprovalForAll",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280601281526020017f68747470733a2f2f697066732f2e6a736f6e00000000000000000000000000008152506100568161005c60201b60201c565b50610391565b806002908161006b91906102bf565b5050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806100f057607f821691505b602082108103610103576101026100a9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261016b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261012e565b610175868361012e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101bc6101b76101b28461018d565b610197565b61018d565b9050919050565b6000819050919050565b6101d6836101a1565b6101ea6101e2826101c3565b84845461013b565b825550505050565b600090565b6101ff6101f2565b61020a8184846101cd565b505050565b5b8181101561022e576102236000826101f7565b600181019050610210565b5050565b601f8211156102735761024481610109565b61024d8461011e565b8101602085101561025c578190505b6102706102688561011e565b83018261020f565b50505b505050565b600082821c905092915050565b600061029660001984600802610278565b1980831691505092915050565b60006102af8383610285565b9150826002028217905092915050565b6102c88261006f565b67ffffffffffffffff8111156102e1576102e061007a565b5b6102eb82546100d8565b6102f6828285610232565b600060209050601f8311600181146103295760008415610317578287015190505b61032185826102a3565b865550610389565b601f19841661033786610109565b60005b8281101561035f5784890151825560018201915060208501945060208101905061033a565b8683101561037c5784890151610378601f891682610285565b8355505b6001600288020188555050505b505050505050565b61209a806103a06000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634e1273f4116100665780634e1273f41461016a578063a22cb4651461019a578063c1292cc3146101b6578063e985e9c5146101d4578063f242432a146102045761009d565b8062fdd58e146100a257806301ffc9a7146100d25780630e89341c146101025780632eb2c2d61461013257806340c10f191461014e575b600080fd5b6100bc60048036038101906100b791906114ab565b610220565b6040516100c991906114fa565b60405180910390f35b6100ec60048036038101906100e7919061156d565b61027a565b6040516100f991906115b5565b60405180910390f35b61011c600480360381019061011791906115d0565b61035c565b604051610129919061168d565b60405180910390f35b61014c600480360381019061014791906118ac565b6103f0565b005b610168600480360381019061016391906114ab565b610498565b005b610184600480360381019061017f9190611a3e565b610507565b6040516101919190611b74565b60405180910390f35b6101b460048036038101906101af9190611bc2565b610610565b005b6101be610626565b6040516101cb91906114fa565b60405180910390f35b6101ee60048036038101906101e99190611c02565b61062c565b6040516101fb91906115b5565b60405180910390f35b61021e60048036038101906102199190611c42565b6106c0565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061034557507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610355575061035482610768565b5b9050919050565b60606002805461036b90611d08565b80601f016020809104026020016040519081016040528092919081815260200182805461039790611d08565b80156103e45780601f106103b9576101008083540402835291602001916103e4565b820191906000526020600020905b8154815290600101906020018083116103c757829003601f168201915b50505050509050919050565b60006103fa6107d2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561043f575061043d868261062c565b155b156104835780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161047a929190611d48565b60405180910390fd5b61049086868686866107da565b505050505050565b6104ac6760ada61b7fa1433960c01b6108d2565b6104c06705b6373ea205ba8960c01b6108d2565b6104d467830a0d4b979958aa60c01b6108d2565b610503826003600081546104e790611da0565b91905081905583604051806020016040528060008152506108d5565b5050565b6060815183511461055357815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161054a929190611de8565b60405180910390fd5b6000835167ffffffffffffffff8111156105705761056f6116b4565b5b60405190808252806020026020018201604052801561059e5781602001602082028036833780820191505090505b50905060005b8451811015610605576105db6105c3828761096e90919063ffffffff16565b6105d6838761098290919063ffffffff16565b610220565b8282815181106105ee576105ed611e11565b5b6020026020010181815250508060010190506105a4565b508091505092915050565b61062261061b6107d2565b8383610996565b5050565b60035481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006106ca6107d2565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561070f575061070d868261062c565b155b156107535780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161074a929190611d48565b60405180910390fd5b6107608686868686610b06565b505050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361084c5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016108439190611e40565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036108be5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016108b59190611e40565b60405180910390fd5b6108cb8585858585610c11565b5050505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109475760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161093e9190611e40565b60405180910390fd5b6000806109548585610cc3565b91509150610966600087848487610c11565b505050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a085760006040517fced3e1000000000000000000000000000000000000000000000000000000000081526004016109ff9190611e40565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610af991906115b5565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b785760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b6f9190611e40565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bea5760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610be19190611e40565b60405180910390fd5b600080610bf78585610cc3565b91509150610c088787848487610c11565b50505050505050565b610c1d85858585610cf3565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610cbc576000610c5b6107d2565b90506001845103610cab576000610c7c60008661098290919063ffffffff16565b90506000610c9460008661098290919063ffffffff16565b9050610ca483898985858961109b565b5050610cba565b610cb981878787878761124f565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b8051825114610d3d57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610d34929190611de8565b60405180910390fd5b6000610d476107d2565b905060005b8351811015610f56576000610d6a828661098290919063ffffffff16565b90506000610d81838661098290919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610eae57600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e5657888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401610e4d9493929190611e5b565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610f49578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f419190611ea0565b925050819055505b5050806001019050610d4c565b506001835103611015576000610f7660008561098290919063ffffffff16565b90506000610f8e60008561098290919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611006929190611de8565b60405180910390a45050611094565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb868660405161108b929190611ed4565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611247578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016110fc959493929190611f60565b6020604051808303816000875af192505050801561113857506040513d601f19601f820116820180604052508101906111359190611fcf565b60015b6111bc573d8060008114611168576040519150601f19603f3d011682016040523d82523d6000602084013e61116d565b606091505b5060008151036111b457846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111ab9190611e40565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461124557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161123c9190611e40565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156113fb578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016112b0959493929190611ffc565b6020604051808303816000875af19250505080156112ec57506040513d601f19601f820116820180604052508101906112e99190611fcf565b60015b611370573d806000811461131c576040519150601f19603f3d011682016040523d82523d6000602084013e611321565b606091505b50600081510361136857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161135f9190611e40565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113f957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016113f09190611e40565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144282611417565b9050919050565b61145281611437565b811461145d57600080fd5b50565b60008135905061146f81611449565b92915050565b6000819050919050565b61148881611475565b811461149357600080fd5b50565b6000813590506114a58161147f565b92915050565b600080604083850312156114c2576114c161140d565b5b60006114d085828601611460565b92505060206114e185828601611496565b9150509250929050565b6114f481611475565b82525050565b600060208201905061150f60008301846114eb565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61154a81611515565b811461155557600080fd5b50565b60008135905061156781611541565b92915050565b6000602082840312156115835761158261140d565b5b600061159184828501611558565b91505092915050565b60008115159050919050565b6115af8161159a565b82525050565b60006020820190506115ca60008301846115a6565b92915050565b6000602082840312156115e6576115e561140d565b5b60006115f484828501611496565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561163757808201518184015260208101905061161c565b60008484015250505050565b6000601f19601f8301169050919050565b600061165f826115fd565b6116698185611608565b9350611679818560208601611619565b61168281611643565b840191505092915050565b600060208201905081810360008301526116a78184611654565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116ec82611643565b810181811067ffffffffffffffff8211171561170b5761170a6116b4565b5b80604052505050565b600061171e611403565b905061172a82826116e3565b919050565b600067ffffffffffffffff82111561174a576117496116b4565b5b602082029050602081019050919050565b600080fd5b600061177361176e8461172f565b611714565b905080838252602082019050602084028301858111156117965761179561175b565b5b835b818110156117bf57806117ab8882611496565b845260208401935050602081019050611798565b5050509392505050565b600082601f8301126117de576117dd6116af565b5b81356117ee848260208601611760565b91505092915050565b600080fd5b600067ffffffffffffffff821115611817576118166116b4565b5b61182082611643565b9050602081019050919050565b82818337600083830152505050565b600061184f61184a846117fc565b611714565b90508281526020810184848401111561186b5761186a6117f7565b5b61187684828561182d565b509392505050565b600082601f830112611893576118926116af565b5b81356118a384826020860161183c565b91505092915050565b600080600080600060a086880312156118c8576118c761140d565b5b60006118d688828901611460565b95505060206118e788828901611460565b945050604086013567ffffffffffffffff81111561190857611907611412565b5b611914888289016117c9565b935050606086013567ffffffffffffffff81111561193557611934611412565b5b611941888289016117c9565b925050608086013567ffffffffffffffff81111561196257611961611412565b5b61196e8882890161187e565b9150509295509295909350565b600067ffffffffffffffff821115611996576119956116b4565b5b602082029050602081019050919050565b60006119ba6119b58461197b565b611714565b905080838252602082019050602084028301858111156119dd576119dc61175b565b5b835b81811015611a0657806119f28882611460565b8452602084019350506020810190506119df565b5050509392505050565b600082601f830112611a2557611a246116af565b5b8135611a358482602086016119a7565b91505092915050565b60008060408385031215611a5557611a5461140d565b5b600083013567ffffffffffffffff811115611a7357611a72611412565b5b611a7f85828601611a10565b925050602083013567ffffffffffffffff811115611aa057611a9f611412565b5b611aac858286016117c9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611aeb81611475565b82525050565b6000611afd8383611ae2565b60208301905092915050565b6000602082019050919050565b6000611b2182611ab6565b611b2b8185611ac1565b9350611b3683611ad2565b8060005b83811015611b67578151611b4e8882611af1565b9750611b5983611b09565b925050600181019050611b3a565b5085935050505092915050565b60006020820190508181036000830152611b8e8184611b16565b905092915050565b611b9f8161159a565b8114611baa57600080fd5b50565b600081359050611bbc81611b96565b92915050565b60008060408385031215611bd957611bd861140d565b5b6000611be785828601611460565b9250506020611bf885828601611bad565b9150509250929050565b60008060408385031215611c1957611c1861140d565b5b6000611c2785828601611460565b9250506020611c3885828601611460565b9150509250929050565b600080600080600060a08688031215611c5e57611c5d61140d565b5b6000611c6c88828901611460565b9550506020611c7d88828901611460565b9450506040611c8e88828901611496565b9350506060611c9f88828901611496565b925050608086013567ffffffffffffffff811115611cc057611cbf611412565b5b611ccc8882890161187e565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611d2057607f821691505b602082108103611d3357611d32611cd9565b5b50919050565b611d4281611437565b82525050565b6000604082019050611d5d6000830185611d39565b611d6a6020830184611d39565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dab82611475565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ddd57611ddc611d71565b5b600182019050919050565b6000604082019050611dfd60008301856114eb565b611e0a60208301846114eb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082019050611e556000830184611d39565b92915050565b6000608082019050611e706000830187611d39565b611e7d60208301866114eb565b611e8a60408301856114eb565b611e9760608301846114eb565b95945050505050565b6000611eab82611475565b9150611eb683611475565b9250828201905080821115611ece57611ecd611d71565b5b92915050565b60006040820190508181036000830152611eee8185611b16565b90508181036020830152611f028184611b16565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000611f3282611f0b565b611f3c8185611f16565b9350611f4c818560208601611619565b611f5581611643565b840191505092915050565b600060a082019050611f756000830188611d39565b611f826020830187611d39565b611f8f60408301866114eb565b611f9c60608301856114eb565b8181036080830152611fae8184611f27565b90509695505050505050565b600081519050611fc981611541565b92915050565b600060208284031215611fe557611fe461140d565b5b6000611ff384828501611fba565b91505092915050565b600060a0820190506120116000830188611d39565b61201e6020830187611d39565b81810360408301526120308186611b16565b905081810360608301526120448185611b16565b905081810360808301526120588184611f27565b9050969550505050505056fea2646970667358221220d41b053146471763cd558edd5dd3f2a26856789949e90a50bedb982e1f71e6aa64736f6c634300081c0033";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC1155 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC1155__factory {
    return super.connect(runner) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new Interface(_abi) as MockERC1155Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC1155 {
    return new Contract(address, _abi, runner) as unknown as MockERC1155;
  }
}
