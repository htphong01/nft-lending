/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../contracts/Mock/MockERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600a8152602001694d6f636b45524337323160b01b8152506040518060400160405280600681526020016545524337323160d01b81525081600090816100629190610116565b50600161006f8282610116565b5050506101d4565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a157607f821691505b6020821081036100c157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011157806000526020600020601f840160051c810160208510156100ee5750805b601f840160051c820191505b8181101561010e57600081556001016100fa565b50505b505050565b81516001600160401b0381111561012f5761012f610077565b6101438161013d845461008d565b846100c7565b6020601f821160018114610177576000831561015f5750848201515b600019600385901b1c1916600184901b17845561010e565b600084815260208120601f198516915b828110156101a75787850151825560209485019460019092019101610187565b50848210156101c55786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610fd4806101e36000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636a62784211610097578063b88d4fde11610066578063b88d4fde146101ff578063c1292cc314610212578063c87b56dd1461021b578063e985e9c51461022e57600080fd5b80636a627842146101b057806370a08231146101c357806395d89b41146101e4578063a22cb465146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610c14565b610241565b60405190151581526020015b60405180910390f35b61012a610293565b6040516101199190610c81565b61014a610145366004610c94565b610325565b6040516001600160a01b039091168152602001610119565b610175610170366004610cc9565b61034e565b005b610175610185366004610cf3565b61035d565b610175610198366004610cf3565b6103ed565b61014a6101ab366004610c94565b61040d565b6101756101be366004610d30565b610418565b6101d66101d1366004610d30565b610438565b604051908152602001610119565b61012a610480565b6101756101fa366004610d4b565b61048f565b61017561020d366004610d9d565b61049a565b6101d660065481565b61012a610229366004610c94565b6104b2565b61010d61023c366004610e81565b610527565b60006001600160e01b031982166380ac58cd60e01b148061027257506001600160e01b03198216635b5e139f60e01b145b8061028d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102a290610eb4565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610eb4565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b600061033082610555565b506000828152600460205260409020546001600160a01b031661028d565b61035982823361058e565b5050565b6001600160a01b03821661038c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061039983833361059b565b9050836001600160a01b0316816001600160a01b0316146103e7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610383565b50505050565b6104088383836040518060200160405280600081525061049a565b505050565b600061028d82610555565b6104358160066000815461042b90610eee565b9182905550610694565b50565b60006001600160a01b038216610464576040516322718ad960e21b815260006004820152602401610383565b506001600160a01b031660009081526003602052604090205490565b6060600180546102a290610eb4565b6103593383836106f9565b6104a584848461035d565b6103e73385858585610798565b60606104bd82610555565b5060006104d560408051602081019091526000815290565b905060008151116104f55760405180602001604052806000815250610520565b806104ff846108c3565b604051602001610510929190610f15565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260408120546001600160a01b03168061028d57604051637e27328960e01b815260048101849052602401610383565b6104088383836001610956565b6000828152600260205260408120546001600160a01b03908116908316156105c8576105c8818486610a5c565b6001600160a01b03811615610606576105e5600085600080610956565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610635576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6001600160a01b0382166106be57604051633250574960e11b815260006004820152602401610383565b60006106cc8383600061059b565b90506001600160a01b03811615610408576040516339e3563760e11b815260006004820152602401610383565b6001600160a01b03821661072b57604051630b61174360e31b81526001600160a01b0383166004820152602401610383565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b156108bc57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906107da908890889087908790600401610f44565b6020604051808303816000875af1925050508015610815575060408051601f3d908101601f1916820190925261081291810190610f81565b60015b61087e573d808015610843576040519150601f19603f3d011682016040523d82523d6000602084013e610848565b606091505b50805160000361087657604051633250574960e11b81526001600160a01b0385166004820152602401610383565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108ba57604051633250574960e11b81526001600160a01b0385166004820152602401610383565b505b5050505050565b606060006108d083610ac0565b600101905060008167ffffffffffffffff8111156108f0576108f0610d87565b6040519080825280601f01601f19166020018201604052801561091a576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461092457509392505050565b808061096a57506001600160a01b03821615155b15610a2c57600061097a84610555565b90506001600160a01b038316158015906109a65750826001600160a01b0316816001600160a01b031614155b80156109b957506109b78184610527565b155b156109e25760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610383565b8115610a2a5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610a67838383610b98565b610408576001600160a01b038316610a9557604051637e27328960e01b815260048101829052602401610383565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610383565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610aff5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610b2b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b4957662386f26fc10000830492506010015b6305f5e1008310610b61576305f5e100830492506008015b6127108310610b7557612710830492506004015b60648310610b87576064830492506002015b600a831061028d5760010192915050565b60006001600160a01b03831615801590610bf65750826001600160a01b0316846001600160a01b03161480610bd25750610bd28484610527565b80610bf657506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b03198116811461043557600080fd5b600060208284031215610c2657600080fd5b813561052081610bfe565b60005b83811015610c4c578181015183820152602001610c34565b50506000910152565b60008151808452610c6d816020860160208601610c31565b601f01601f19169290920160200192915050565b6020815260006105206020830184610c55565b600060208284031215610ca657600080fd5b5035919050565b80356001600160a01b0381168114610cc457600080fd5b919050565b60008060408385031215610cdc57600080fd5b610ce583610cad565b946020939093013593505050565b600080600060608486031215610d0857600080fd5b610d1184610cad565b9250610d1f60208501610cad565b929592945050506040919091013590565b600060208284031215610d4257600080fd5b61052082610cad565b60008060408385031215610d5e57600080fd5b610d6783610cad565b915060208301358015158114610d7c57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610db357600080fd5b610dbc85610cad565b9350610dca60208601610cad565b925060408501359150606085013567ffffffffffffffff811115610ded57600080fd5b8501601f81018713610dfe57600080fd5b803567ffffffffffffffff811115610e1857610e18610d87565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610e4757610e47610d87565b604052818152828201602001891015610e5f57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215610e9457600080fd5b610e9d83610cad565b9150610eab60208401610cad565b90509250929050565b600181811c90821680610ec857607f821691505b602082108103610ee857634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610f0e57634e487b7160e01b600052601160045260246000fd5b5060010190565b60008351610f27818460208801610c31565b835190830190610f3b818360208801610c31565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f7790830184610c55565b9695505050505050565b600060208284031215610f9357600080fd5b815161052081610bfe56fea26469706673582212203fcb2149e9942d3e8f9dae3b92459852ac8e8f32f8d331c0f68845cd3ce56aa964736f6c634300081c0033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC721__factory {
    return super.connect(runner) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new Interface(_abi) as MockERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC721 {
    return new Contract(address, _abi, runner) as unknown as MockERC721;
  }
}
