/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ChonkSociety,
  ChonkSocietyInterface,
} from "../../contracts/ChonkSociety";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseExtension",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060200160405280600081525060089081610022919061037c565b5034801561002f57600080fd5b506040516127b63803806127b683398181016040528101906100519190610594565b6040518060400160405280600d81526020017f43686f6e6b20536f6369657479000000000000000000000000000000000000008152506040518060400160405280600581526020017f43484f4e4b00000000000000000000000000000000000000000000000000000081525081600090816100cc919061037c565b5080600190816100dc919061037c565b5050506100f967da1bb1fd47293abf60c01b61012960201b60201c565b6101136773800be6fb49e11760c01b61012960201b60201c565b8060089081610122919061037c565b50506105dd565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806101ad57607f821691505b6020821081036101c0576101bf610166565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826101eb565b61023286836101eb565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061027961027461026f8461024a565b610254565b61024a565b9050919050565b6000819050919050565b6102938361025e565b6102a761029f82610280565b8484546101f8565b825550505050565b600090565b6102bc6102af565b6102c781848461028a565b505050565b5b818110156102eb576102e06000826102b4565b6001810190506102cd565b5050565b601f82111561033057610301816101c6565b61030a846101db565b81016020851015610319578190505b61032d610325856101db565b8301826102cc565b50505b505050565b600082821c905092915050565b600061035360001984600802610335565b1980831691505092915050565b600061036c8383610342565b9150826002028217905092915050565b6103858261012c565b67ffffffffffffffff81111561039e5761039d610137565b5b6103a88254610195565b6103b38282856102ef565b600060209050601f8311600181146103e657600084156103d4578287015190505b6103de8582610360565b865550610446565b601f1984166103f4866101c6565b60005b8281101561041c578489015182556001820191506020850194506020810190506103f7565b868310156104395784890151610435601f891682610342565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6104868261046c565b810181811067ffffffffffffffff821117156104a5576104a4610137565b5b80604052505050565b60006104b861044e565b90506104c4828261047d565b919050565b600067ffffffffffffffff8211156104e4576104e3610137565b5b6104ed8261046c565b9050602081019050919050565b60005b838110156105185780820151818401526020810190506104fd565b60008484015250505050565b6000610537610532846104c9565b6104ae565b90508281526020810184848401111561055357610552610467565b5b61055e8482856104fa565b509392505050565b600082601f83011261057b5761057a610462565b5b815161058b848260208601610524565b91505092915050565b6000602082840312156105aa576105a9610458565b5b600082015167ffffffffffffffff8111156105c8576105c761045d565b5b6105d484828501610566565b91505092915050565b6121ca806105ec6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636c0360eb116100a2578063a22cb46511610071578063a22cb465146102b8578063b88d4fde146102d4578063c6682862146102f0578063c87b56dd1461030e578063e985e9c51461033e5761010b565b80636c0360eb1461022e57806370a082311461024c578063714cff561461027c57806395d89b411461029a5761010b565b806323b872dd116100de57806323b872dd146101aa57806340c10f19146101c657806342842e0e146101e25780636352211e146101fe5761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a600480360381019061012591906118f8565b61036e565b6040516101379190611940565b60405180910390f35b6101486103cf565b60405161015591906119eb565b60405180910390f35b61017860048036038101906101739190611a43565b610461565b6040516101859190611ab1565b60405180910390f35b6101a860048036038101906101a39190611af8565b61047d565b005b6101c460048036038101906101bf9190611b38565b610493565b005b6101e060048036038101906101db9190611af8565b610595565b005b6101fc60048036038101906101f79190611b38565b61064e565b005b61021860048036038101906102139190611a43565b61066e565b6040516102259190611ab1565b60405180910390f35b610236610680565b60405161024391906119eb565b60405180910390f35b61026660048036038101906102619190611b8b565b61070e565b6040516102739190611bc7565b60405180910390f35b6102846107c8565b6040516102919190611bc7565b60405180910390f35b6102a26107ce565b6040516102af91906119eb565b60405180910390f35b6102d260048036038101906102cd9190611c0e565b610860565b005b6102ee60048036038101906102e99190611d83565b610876565b005b6102f861089b565b60405161030591906119eb565b60405180910390f35b61032860048036038101906103239190611a43565b6108d4565b60405161033591906119eb565b60405180910390f35b61035860048036038101906103539190611e06565b6109ad565b6040516103659190611940565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c857506103c782610a41565b5b9050919050565b6060600080546103de90611e75565b80601f016020809104026020016040519081016040528092919081815260200182805461040a90611e75565b80156104575780601f1061042c57610100808354040283529160200191610457565b820191906000526020600020905b81548152906001019060200180831161043a57829003601f168201915b5050505050905090565b600061046c82610b23565b5061047682610bab565b9050919050565b61048f828261048a610be8565b610bf0565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105055760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104fc9190611ab1565b60405180910390fd5b60006105198383610514610be8565b610c02565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461058f578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161058693929190611ea6565b60405180910390fd5b50505050565b6105a96748091860f18d2f3560c01b610e1c565b6105bd6737687173c4be78b060c01b610e1c565b6105d1676efab11534834a9760c01b610e1c565b60005b81811015610649576105f067c53e67fcf653559560c01b610e1c565b6007600081548092919061060390611f0c565b919050555061061c675a540058c0b311f860c01b610e1c565b610630674ddaaf648bfeca6d60c01b610e1c565b61063c83600754610e1f565b80806001019150506105d4565b505050565b61066983838360405180602001604052806000815250610876565b505050565b600061067982610b23565b9050919050565b6008805461068d90611e75565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990611e75565b80156107065780601f106106db57610100808354040283529160200191610706565b820191906000526020600020905b8154815290600101906020018083116106e957829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107815760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107789190611ab1565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b6060600180546107dd90611e75565b80601f016020809104026020016040519081016040528092919081815260200182805461080990611e75565b80156108565780601f1061082b57610100808354040283529160200191610856565b820191906000526020600020905b81548152906001019060200180831161083957829003601f168201915b5050505050905090565b61087261086b610be8565b8383610e3d565b5050565b610881848484610493565b61089561088c610be8565b85858585610fac565b50505050565b6040518060400160405280600581526020017f2e6a736f6e00000000000000000000000000000000000000000000000000000081525081565b60606108ea67944478a0ee1a2d6d60c01b610e1c565b6108fe67d074fde6fbd976d860c01b610e1c565b610912676e4ebe48c6be42c460c01b610e1c565b61091b82610b23565b506109306793f1036ce165497360c01b610e1c565b61094467ce32d1b79e8b7eb860c01b610e1c565b600861094f8361115d565b6040518060400160405280600581526020017f2e6a736f6e00000000000000000000000000000000000000000000000000000081525060405160200161099793929190612028565b6040516020818303038152906040529050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610b0c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b1c5750610b1b8261122b565b5b9050919050565b600080610b2f83611295565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ba257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b999190611bc7565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bfd83838360016112d2565b505050565b600080610c0e84611295565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c5057610c4f818486611497565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ce157610c926000856000806112d2565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d64576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b50565b610e3982826040518060200160405280600081525061155b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eae57816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610ea59190611ab1565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f9f9190611940565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611156578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161100b94939291906120ae565b6020604051808303816000875af192505050801561104757506040513d601f19601f82011682018060405250810190611044919061210f565b60015b6110cb573d8060008114611077576040519150601f19603f3d011682016040523d82523d6000602084013e61107c565b606091505b5060008151036110c357836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110ba9190611ab1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461115457836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161114b9190611ab1565b60405180910390fd5b505b5050505050565b60606000600161116c8461157f565b01905060008167ffffffffffffffff81111561118b5761118a611c58565b5b6040519080825280601f01601f1916602001820160405280156111bd5781602001600182028036833780820191505090505b509050600082602001820190505b600115611220578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816112145761121361213c565b5b049450600085036111cb575b819350505050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061130b5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561143f57600061131b84610b23565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561138657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611399575061139781846109ad565b155b156113db57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016113d29190611ab1565b60405180910390fd5b811561143d57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6114a28383836116d2565b61155657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361151757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161150e9190611bc7565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161154d92919061216b565b60405180910390fd5b505050565b6115658383611793565b61157a611570610be8565b6000858585610fac565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106115dd577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816115d3576115d261213c565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061161a576d04ee2d6d415b85acef810000000083816116105761160f61213c565b5b0492506020810190505b662386f26fc10000831061164957662386f26fc10000838161163f5761163e61213c565b5b0492506010810190505b6305f5e1008310611672576305f5e10083816116685761166761213c565b5b0492506008810190505b612710831061169757612710838161168d5761168c61213c565b5b0492506004810190505b606483106116ba57606483816116b0576116af61213c565b5b0492506002810190505b600a83106116c9576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561178a57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061174b575061174a84846109ad565b5b8061178957508273ffffffffffffffffffffffffffffffffffffffff1661177183610bab565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118055760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016117fc9190611ab1565b60405180910390fd5b600061181383836000610c02565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146118875760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161187e9190611ab1565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6118d5816118a0565b81146118e057600080fd5b50565b6000813590506118f2816118cc565b92915050565b60006020828403121561190e5761190d611896565b5b600061191c848285016118e3565b91505092915050565b60008115159050919050565b61193a81611925565b82525050565b60006020820190506119556000830184611931565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561199557808201518184015260208101905061197a565b60008484015250505050565b6000601f19601f8301169050919050565b60006119bd8261195b565b6119c78185611966565b93506119d7818560208601611977565b6119e0816119a1565b840191505092915050565b60006020820190508181036000830152611a0581846119b2565b905092915050565b6000819050919050565b611a2081611a0d565b8114611a2b57600080fd5b50565b600081359050611a3d81611a17565b92915050565b600060208284031215611a5957611a58611896565b5b6000611a6784828501611a2e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a9b82611a70565b9050919050565b611aab81611a90565b82525050565b6000602082019050611ac66000830184611aa2565b92915050565b611ad581611a90565b8114611ae057600080fd5b50565b600081359050611af281611acc565b92915050565b60008060408385031215611b0f57611b0e611896565b5b6000611b1d85828601611ae3565b9250506020611b2e85828601611a2e565b9150509250929050565b600080600060608486031215611b5157611b50611896565b5b6000611b5f86828701611ae3565b9350506020611b7086828701611ae3565b9250506040611b8186828701611a2e565b9150509250925092565b600060208284031215611ba157611ba0611896565b5b6000611baf84828501611ae3565b91505092915050565b611bc181611a0d565b82525050565b6000602082019050611bdc6000830184611bb8565b92915050565b611beb81611925565b8114611bf657600080fd5b50565b600081359050611c0881611be2565b92915050565b60008060408385031215611c2557611c24611896565b5b6000611c3385828601611ae3565b9250506020611c4485828601611bf9565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611c90826119a1565b810181811067ffffffffffffffff82111715611caf57611cae611c58565b5b80604052505050565b6000611cc261188c565b9050611cce8282611c87565b919050565b600067ffffffffffffffff821115611cee57611ced611c58565b5b611cf7826119a1565b9050602081019050919050565b82818337600083830152505050565b6000611d26611d2184611cd3565b611cb8565b905082815260208101848484011115611d4257611d41611c53565b5b611d4d848285611d04565b509392505050565b600082601f830112611d6a57611d69611c4e565b5b8135611d7a848260208601611d13565b91505092915050565b60008060008060808587031215611d9d57611d9c611896565b5b6000611dab87828801611ae3565b9450506020611dbc87828801611ae3565b9350506040611dcd87828801611a2e565b925050606085013567ffffffffffffffff811115611dee57611ded61189b565b5b611dfa87828801611d55565b91505092959194509250565b60008060408385031215611e1d57611e1c611896565b5b6000611e2b85828601611ae3565b9250506020611e3c85828601611ae3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e8d57607f821691505b602082108103611ea057611e9f611e46565b5b50919050565b6000606082019050611ebb6000830186611aa2565b611ec86020830185611bb8565b611ed56040830184611aa2565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f1782611a0d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f4957611f48611edd565b5b600182019050919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154611f8181611e75565b611f8b8186611f54565b94506001821660008114611fa65760018114611fbb57611fee565b60ff1983168652811515820286019350611fee565b611fc485611f5f565b60005b83811015611fe657815481890152600182019150602081019050611fc7565b838801955050505b50505092915050565b60006120028261195b565b61200c8185611f54565b935061201c818560208601611977565b80840191505092915050565b60006120348286611f74565b91506120408285611ff7565b915061204c8284611ff7565b9150819050949350505050565b600081519050919050565b600082825260208201905092915050565b600061208082612059565b61208a8185612064565b935061209a818560208601611977565b6120a3816119a1565b840191505092915050565b60006080820190506120c36000830187611aa2565b6120d06020830186611aa2565b6120dd6040830185611bb8565b81810360608301526120ef8184612075565b905095945050505050565b600081519050612109816118cc565b92915050565b60006020828403121561212557612124611896565b5b6000612133848285016120fa565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506121806000830185611aa2565b61218d6020830184611bb8565b939250505056fea2646970667358221220f282d9299fcbbf3433683d5820f9f614cc3a060669a7e75f419bc800bd9c76e764736f6c634300081c0033";

type ChonkSocietyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChonkSocietyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChonkSociety__factory extends ContractFactory {
  constructor(...args: ChonkSocietyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _baseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_baseURI, overrides || {});
  }
  override deploy(
    _baseURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_baseURI, overrides || {}) as Promise<
      ChonkSociety & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ChonkSociety__factory {
    return super.connect(runner) as ChonkSociety__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChonkSocietyInterface {
    return new Interface(_abi) as ChonkSocietyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ChonkSociety {
    return new Contract(address, _abi, runner) as unknown as ChonkSociety;
  }
}
