/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NFTfiSigningUtilsContract,
  NFTfiSigningUtilsContractInterface,
} from "../../../contracts/utils/NFTfiSigningUtilsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_newLoanDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_newMaximumRepaymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_renegotiationFee",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderRenegotiationSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "address",
            name: "lendingPool",
            type: "address",
          },
        ],
        internalType: "struct LoanData.Offer",
        name: "_offer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061064e8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636068b5561461003b578063de8dadb614610062575b600080fd5b61004e61004936600461031a565b610075565b604051901515815260200160405180910390f35b61004e610070366004610394565b610105565b6040516384552c9360e01b815260009073__$07730b9b91c2b41a419f99961f709e7858$__906384552c93906100b9908a908a908a908a908a908a906004016104f2565b602060405180830381865af41580156100d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fa919061053e565b979650505050505050565b6040516301aae07b60e61b815260009073__$07730b9b91c2b41a419f99961f709e7858$__90636ab81ec09061014390879087908790600401610567565b602060405180830381865af4158015610160573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610184919061053e565b949350505050565b803563ffffffff811681146101a057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156101de576101de6101a5565b60405290565b604051610100810167ffffffffffffffff811182821017156101de576101de6101a5565b604051601f8201601f1916810167ffffffffffffffff81118282101715610231576102316101a5565b604052919050565b80356001600160a01b03811681146101a057600080fd5b60006080828403121561026257600080fd5b61026a6101bb565b8235815260208084013590820152905061028660408301610239565b6040820152606082013567ffffffffffffffff8111156102a557600080fd5b8201601f810184136102b657600080fd5b803567ffffffffffffffff8111156102d0576102d06101a5565b6102e3601f8201601f1916602001610208565b8181528560208385010111156102f857600080fd5b8160208401602083013760006020838301015280606085015250505092915050565b60008060008060008060c0878903121561033357600080fd5b863595506103436020880161018c565b94506040870135935060608701359250608087013567ffffffffffffffff81111561036d57600080fd5b61037989828a01610250565b92505061038860a08801610239565b90509295509295509295565b60008060008385036101408112156103ab57600080fd5b6101008112156103ba57600080fd5b506103c36101e4565b8435815260208086013590820152604080860135908201526103e760608601610239565b60608201526103f86080860161018c565b608082015260a085013561ffff8116811461041257600080fd5b60a082015261042360c08601610239565b60c082015261043460e08601610239565b60e0820152925061010084013567ffffffffffffffff81111561045657600080fd5b61046286828701610250565b9250506104726101208501610239565b90509250925092565b805182526020810151602083015260018060a01b0360408201511660408301526000606082015160806060850152805180608086015260005b818110156104d157602081840181015160a08884010152016104b4565b50600060a0828701015260a0601f19601f8301168601019250505092915050565b86815263ffffffff8616602082015284604082015283606082015260c06080820152600061052360c083018561047b565b905060018060a01b03831660a0830152979650505050505050565b60006020828403121561055057600080fd5b8151801515811461056057600080fd5b9392505050565b83518152602084015160208201526040840151604082015260018060a01b03606085015116606082015263ffffffff608085015116608082015261ffff60a08501511660a0820152600060c08501516105cb60c08401826001600160a01b03169052565b5060e08501516105e660e08401826001600160a01b03169052565b506101406101008301526105fe61014083018561047b565b6001600160a01b038416610120840152905094935050505056fea26469706673582212209cfd2118a64c85ec63a1120d450666d489b8e62e021b1d4844245ca87468a67664736f6c634300081c0033";

type NFTfiSigningUtilsContractConstructorParams =
  | [
      linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTfiSigningUtilsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NFTfiSigningUtilsContract__factory extends ContractFactory {
  constructor(...args: NFTfiSigningUtilsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NFTfiSigningUtilsContract__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07730b9b91c2b41a419f99961f709e7858\\$__", "g"),
      linkLibraryAddresses[
        "contracts/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTfiSigningUtilsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NFTfiSigningUtilsContract__factory {
    return super.connect(runner) as NFTfiSigningUtilsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTfiSigningUtilsContractInterface {
    return new Interface(_abi) as NFTfiSigningUtilsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTfiSigningUtilsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NFTfiSigningUtilsContract;
  }
}

export interface NFTfiSigningUtilsContractLibraryAddresses {
  ["contracts/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"]: string;
}
