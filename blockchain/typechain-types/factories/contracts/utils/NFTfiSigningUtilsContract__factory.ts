/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NFTfiSigningUtilsContract,
  NFTfiSigningUtilsContractInterface,
} from "../../../contracts/utils/NFTfiSigningUtilsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_newLoanDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_newMaximumRepaymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_renegotiationFee",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "loanStartTime",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "useLendingPool",
            type: "bool",
          },
        ],
        internalType: "struct LoanData.LoanTerms",
        name: "_loan",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderRenegotiationSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "address",
            name: "lendingPool",
            type: "address",
          },
        ],
        internalType: "struct LoanData.Offer",
        name: "_offer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50610d408061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b59a4da71461003b578063de8dadb61461006b575b600080fd5b610055600480360381019061005091906106ec565b61009b565b60405161006291906107bc565b60405180910390f35b610085600480360381019061008091906108a1565b61016a565b60405161009291906107bc565b60405180910390f35b60006100b167699979a162b16eaf60c01b61022d565b6100c567927aabc1ecd285b860c01b61022d565b6100d967bee48d361dc0197e60c01b61022d565b73__$07730b9b91c2b41a419f99961f709e7858$__63bf9bbe95898989898989896040518863ffffffff1660e01b815260040161011c9796959493929190610b6c565b602060405180830381865af4158015610139573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015d9190610bfa565b9050979650505050505050565b60006101806727c9dd6f3b22ffbc60c01b61022d565b61019467fe69b67480bd1ac260c01b61022d565b6101a867c22c2a0736fe9af460c01b61022d565b73__$07730b9b91c2b41a419f99961f709e7858$__636ab81ec08585856040518463ffffffff1660e01b81526004016101e393929190610cc9565b602060405180830381865af4158015610200573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102249190610bfa565b90509392505050565b50565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61025781610244565b811461026257600080fd5b50565b6000813590506102748161024e565b92915050565b600063ffffffff82169050919050565b6102938161027a565b811461029e57600080fd5b50565b6000813590506102b08161028a565b92915050565b6000819050919050565b6102c9816102b6565b81146102d457600080fd5b50565b6000813590506102e6816102c0565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61033a826102f1565b810181811067ffffffffffffffff8211171561035957610358610302565b5b80604052505050565b600061036c610230565b90506103788282610331565b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ad82610382565b9050919050565b6103bd816103a2565b81146103c857600080fd5b50565b6000813590506103da816103b4565b92915050565b600061ffff82169050919050565b6103f7816103e0565b811461040257600080fd5b50565b600081359050610414816103ee565b92915050565b600067ffffffffffffffff82169050919050565b6104378161041a565b811461044257600080fd5b50565b6000813590506104548161042e565b92915050565b60008115159050919050565b61046f8161045a565b811461047a57600080fd5b50565b60008135905061048c81610466565b92915050565b600061016082840312156104a9576104a86102ec565b5b6104b4610160610362565b905060006104c4848285016102d7565b60008301525060206104d8848285016102d7565b60208301525060406104ec848285016102d7565b6040830152506060610500848285016103cb565b6060830152506080610514848285016102a1565b60808301525060a061052884828501610405565b60a08301525060c061053c84828501610445565b60c08301525060e0610550848285016103cb565b60e083015250610100610565848285016103cb565b6101008301525061012061057b848285016103cb565b610120830152506101406105918482850161047d565b6101408301525092915050565b600080fd5b600080fd5b600067ffffffffffffffff8211156105c3576105c2610302565b5b6105cc826102f1565b9050602081019050919050565b82818337600083830152505050565b60006105fb6105f6846105a8565b610362565b905082815260208101848484011115610617576106166105a3565b5b6106228482856105d9565b509392505050565b600082601f83011261063f5761063e61059e565b5b813561064f8482602086016105e8565b91505092915050565b60006080828403121561066e5761066d6102ec565b5b6106786080610362565b90506000610688848285016102d7565b600083015250602061069c848285016102d7565b60208301525060406106b0848285016103cb565b604083015250606082013567ffffffffffffffff8111156106d4576106d361037d565b5b6106e08482850161062a565b60608301525092915050565b6000806000806000806000610220888a03121561070c5761070b61023a565b5b600061071a8a828b01610265565b975050602061072b8a828b016102a1565b965050604061073c8a828b016102d7565b955050606061074d8a828b016102d7565b945050608061075e8a828b01610492565b9350506101e088013567ffffffffffffffff8111156107805761077f61023f565b5b61078c8a828b01610658565b92505061020061079e8a828b016103cb565b91505092959891949750929550565b6107b68161045a565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600061010082840312156107ee576107ed6102ec565b5b6107f9610100610362565b90506000610809848285016102d7565b600083015250602061081d848285016102d7565b6020830152506040610831848285016102d7565b6040830152506060610845848285016103cb565b6060830152506080610859848285016102a1565b60808301525060a061086d84828501610405565b60a08301525060c0610881848285016103cb565b60c08301525060e0610895848285016103cb565b60e08301525092915050565b600080600061014084860312156108bb576108ba61023a565b5b60006108c9868287016107d7565b93505061010084013567ffffffffffffffff8111156108eb576108ea61023f565b5b6108f786828701610658565b925050610120610909868287016103cb565b9150509250925092565b61091c81610244565b82525050565b61092b8161027a565b82525050565b61093a816102b6565b82525050565b610949816102b6565b82525050565b610958816103a2565b82525050565b6109678161027a565b82525050565b610976816103e0565b82525050565b6109858161041a565b82525050565b6109948161045a565b82525050565b610160820160008201516109b16000850182610940565b5060208201516109c46020850182610940565b5060408201516109d76040850182610940565b5060608201516109ea606085018261094f565b5060808201516109fd608085018261095e565b5060a0820151610a1060a085018261096d565b5060c0820151610a2360c085018261097c565b5060e0820151610a3660e085018261094f565b50610100820151610a4b61010085018261094f565b50610120820151610a6061012085018261094f565b50610140820151610a7561014085018261098b565b50505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab5578082015181840152602081019050610a9a565b60008484015250505050565b6000610acc82610a7b565b610ad68185610a86565b9350610ae6818560208601610a97565b610aef816102f1565b840191505092915050565b6000608083016000830151610b126000860182610940565b506020830151610b256020860182610940565b506040830151610b38604086018261094f565b5060608301518482036060860152610b508282610ac1565b9150508091505092915050565b610b66816103a2565b82525050565b600061022082019050610b82600083018a610913565b610b8f6020830189610922565b610b9c6040830188610931565b610ba96060830187610931565b610bb6608083018661099a565b8181036101e0830152610bc98185610afa565b9050610bd9610200830184610b5d565b98975050505050505050565b600081519050610bf481610466565b92915050565b600060208284031215610c1057610c0f61023a565b5b6000610c1e84828501610be5565b91505092915050565b61010082016000820151610c3e6000850182610940565b506020820151610c516020850182610940565b506040820151610c646040850182610940565b506060820151610c77606085018261094f565b506080820151610c8a608085018261095e565b5060a0820151610c9d60a085018261096d565b5060c0820151610cb060c085018261094f565b5060e0820151610cc360e085018261094f565b50505050565b600061014082019050610cdf6000830186610c27565b818103610100830152610cf28185610afa565b9050610d02610120830184610b5d565b94935050505056fea2646970667358221220c7afb519ba975fbe8da5a752d45b0b0bd06e5f7de50b29b4d695968d9d5f139564736f6c634300081c0033";

type NFTfiSigningUtilsContractConstructorParams =
  | [
      linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTfiSigningUtilsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NFTfiSigningUtilsContract__factory extends ContractFactory {
  constructor(...args: NFTfiSigningUtilsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NFTfiSigningUtilsContract__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$07730b9b91c2b41a419f99961f709e7858\\$__", "g"),
      linkLibraryAddresses[
        "contracts/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTfiSigningUtilsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NFTfiSigningUtilsContract__factory {
    return super.connect(runner) as NFTfiSigningUtilsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTfiSigningUtilsContractInterface {
    return new Interface(_abi) as NFTfiSigningUtilsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTfiSigningUtilsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NFTfiSigningUtilsContract;
  }
}

export interface NFTfiSigningUtilsContractLibraryAddresses {
  ["contracts/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"]: string;
}
