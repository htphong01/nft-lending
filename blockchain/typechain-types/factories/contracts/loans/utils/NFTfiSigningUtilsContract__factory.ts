/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  NFTfiSigningUtilsContract,
  NFTfiSigningUtilsContractInterface,
} from "../../../../contracts/loans/utils/NFTfiSigningUtilsContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_newLoanDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_newMaximumRepaymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_renegotiationFee",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "loanStartTime",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "useLendingPool",
            type: "bool",
          },
        ],
        internalType: "struct LoanData.LoanTerms",
        name: "_loan",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderRenegotiationSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "address",
            name: "lendingPool",
            type: "address",
          },
        ],
        internalType: "struct LoanData.Offer",
        name: "_offer",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct LoanData.Signature",
        name: "_signature",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_loanContract",
        type: "address",
      },
    ],
    name: "isValidLenderSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061084b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063b59a4da71461003b578063de8dadb614610062575b600080fd5b61004e610049366004610387565b610075565b604051901515815260200160405180910390f35b61004e6100703660046104d4565b610108565b60405163bf9bbe9560e01b815260009073__$420ca3bf4c29c058c0b51c911d942859a1$__9063bf9bbe95906100bb908b908b908b908b908b908b908b90600401610629565b602060405180830381865af41580156100d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fc9190610740565b98975050505050505050565b6040516301aae07b60e61b815260009073__$420ca3bf4c29c058c0b51c911d942859a1$__90636ab81ec09061014690879087908790600401610764565b602060405180830381865af4158015610163573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101879190610740565b949350505050565b803563ffffffff811681146101a357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff811182821017156101e1576101e16101a8565b60405290565b604051610160810167ffffffffffffffff811182821017156101e1576101e16101a8565b604051610100810167ffffffffffffffff811182821017156101e1576101e16101a8565b604051601f8201601f1916810167ffffffffffffffff81118282101715610258576102586101a8565b604052919050565b80356001600160a01b03811681146101a357600080fd5b803561ffff811681146101a357600080fd5b803567ffffffffffffffff811681146101a357600080fd5b80151581146102af57600080fd5b50565b80356101a3816102a1565b6000608082840312156102cf57600080fd5b6102d76101be565b823581526020808401359082015290506102f360408301610260565b6040820152606082013567ffffffffffffffff81111561031257600080fd5b8201601f8101841361032357600080fd5b803567ffffffffffffffff81111561033d5761033d6101a8565b610350601f8201601f191660200161022f565b81815285602083850101111561036557600080fd5b8160208401602083013760006020838301015280606085015250505092915050565b60008060008060008060008789036102208112156103a457600080fd5b883597506103b460208a0161018f565b96506040890135955060608901359450610160607f19820112156103d757600080fd5b506103e06101e7565b6080890135815260a0890135602082015260c0890135604082015261040760e08a01610260565b60608201526104196101008a0161018f565b608082015261042b6101208a01610277565b60a082015261043d6101408a01610289565b60c082015261044f6101608a01610260565b60e08201526104616101808a01610260565b6101008201526104746101a08a01610260565b6101208201526104876101c08a016102b2565b61014082015292506101e088013567ffffffffffffffff8111156104aa57600080fd5b6104b68a828b016102bd565b9250506104c66102008901610260565b905092959891949750929550565b60008060008385036101408112156104eb57600080fd5b6101008112156104fa57600080fd5b5061050361020b565b84358152602080860135908201526040808601359082015261052760608601610260565b60608201526105386080860161018f565b608082015261054960a08601610277565b60a082015261055a60c08601610260565b60c082015261056b60e08601610260565b60e0820152925061010084013567ffffffffffffffff81111561058d57600080fd5b610599868287016102bd565b9250506105a96101208501610260565b90509250925092565b805182526020810151602083015260018060a01b0360408201511660408301526000606082015160806060850152805180608086015260005b8181101561060857602081840181015160a08884010152016105eb565b50600060a0828701015260a0601f19601f8301168601019250505092915050565b87815263ffffffff8716602082015285604082015284606082015283516080820152602084015160a0820152604084015160c08201526000606085015161067b60e08401826001600160a01b03169052565b50608085015163ffffffff81166101008401525060a085015161ffff81166101208401525060c085015167ffffffffffffffff81166101408401525060e08501516001600160a01b038116610160840152506101008501516001600160a01b038116610180840152506101208501516001600160a01b0381166101a0840152506101408501518015156101c0840152506102206101e08301526107226102208301856105b2565b6001600160a01b038416610200840152905098975050505050505050565b60006020828403121561075257600080fd5b815161075d816102a1565b9392505050565b83518152602084015160208201526040840151604082015260018060a01b03606085015116606082015263ffffffff608085015116608082015261ffff60a08501511660a0820152600060c08501516107c860c08401826001600160a01b03169052565b5060e08501516107e360e08401826001600160a01b03169052565b506101406101008301526107fb6101408301856105b2565b6001600160a01b038416610120840152905094935050505056fea26469706673582212207b16196ad2238726e59d46cee53e99d46e44f195fdd5a38ef605d580d0c9a86c64736f6c634300081c0033";

type NFTfiSigningUtilsContractConstructorParams =
  | [
      linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTfiSigningUtilsContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NFTfiSigningUtilsContract__factory extends ContractFactory {
  constructor(...args: NFTfiSigningUtilsContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NFTfiSigningUtilsContract__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NFTfiSigningUtilsContractLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$420ca3bf4c29c058c0b51c911d942859a1\\$__", "g"),
      linkLibraryAddresses[
        "contracts/loans/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NFTfiSigningUtilsContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NFTfiSigningUtilsContract__factory {
    return super.connect(runner) as NFTfiSigningUtilsContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTfiSigningUtilsContractInterface {
    return new Interface(_abi) as NFTfiSigningUtilsContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTfiSigningUtilsContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NFTfiSigningUtilsContract;
  }
}

export interface NFTfiSigningUtilsContractLibraryAddresses {
  ["contracts/loans/utils/NFTfiSigningUtils.sol:NFTfiSigningUtils"]: string;
}
