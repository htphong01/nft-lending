/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  LoanChecksAndCalculations,
  LoanChecksAndCalculationsInterface,
} from "../../../../../contracts/loans/direct/loanTypes/LoanChecksAndCalculations";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
    ],
    name: "checkLoanIdValidity",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_interestDue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFeeInBasisPoints",
        type: "uint256",
      },
    ],
    name: "computeAdminFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
    ],
    name: "payBackChecks",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "principalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumRepaymentAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nftCollateralId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Denomination",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "duration",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "adminFeeInBasisPoints",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "loanStartTime",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "nftCollateralContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "bool",
            name: "useLendingPool",
            type: "bool",
          },
        ],
        internalType: "struct LoanData.LoanTerms",
        name: "_loan",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_loanId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_newLoanDuration",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_newMaximumRepaymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lenderNonce",
        type: "uint256",
      },
    ],
    name: "renegotiationChecks",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6109d7610039600b82828239805160001a607314602c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80632ad659af1461005b578063798f14d114610081578063e573133c14610096578063f4ac6bfc146100a9575b600080fd5b61006e610069366004610617565b6100dc565b6040519081526020015b60405180910390f35b61009461008f366004610639565b6100fe565b005b6100946100a4366004610639565b6101e1565b6100bc6100b7366004610721565b610334565b604080516001600160a01b03938416815292909116602083015201610078565b60006127106100eb8385610840565b6100f59190610857565b90505b92915050565b610107816101e1565b604051630ceb3a7360e01b81526004810182905260009081903090630ceb3a739060240161016060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d9190610884565b505050509650509550505050508163ffffffff168167ffffffffffffffff166101969190610951565b4211156101dc5760405162461bcd60e51b815260206004820152600f60248201526e131bd85b881a5cc8195e1c1a5c9959608a1b60448201526064015b60405180910390fd5b505050565b60405163ed4a4a6760e01b815260048101829052309063ed4a4a6790602401602060405180830381865afa15801561021d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190610964565b1561028e5760405162461bcd60e51b815260206004820152601e60248201527f4c6f616e20616c7265616479207265706169642f6c697175696461746564000060448201526064016101d3565b60405163bd16181b60e01b815260048101829052309063bd16181b90602401602060405180830381865afa1580156102ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ee9190610964565b6103315760405162461bcd60e51b8152602060048201526014602482015273139bdb9948195e1a5cdd1959081b1bd85b88125160621b60448201526064016101d3565b50565b600080610340866101e1565b8661010001516001600160a01b0316336001600160a01b0316146103a65760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920626f72726f7765722063616e20696e69746961746500000000000060448201526064016101d3565b8463ffffffff168760c0015167ffffffffffffffff166103c69190610951565b4211156104155760405162461bcd60e51b815260206004820152601c60248201527f4e6577206475726174696f6e20616c726561647920657870697265640000000060448201526064016101d3565b306001600160a01b031663192b355d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610988565b8563ffffffff1611156104df5760405162461bcd60e51b815260206004820152602a60248201527f4e6577206475726174696f6e2065786365656473206d6178696d756d206c6f616044820152693710323ab930ba34b7b760b11b60648201526084016101d3565b86518410156105455760405162461bcd60e51b815260206004820152602c60248201527f4e6567617469766520696e7465726573742072617465206c6f616e732061726560448201526b081b9bdd08185b1b1bddd95960a21b60648201526084016101d3565b610120870151604051630328404b60e41b81526001600160a01b03909116600482015260248101849052309063328404b090604401602060405180830381865afa158015610597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bb9190610964565b156105ff5760405162461bcd60e51b815260206004820152601460248201527313195b99195c881b9bdb98d9481a5b9d985b1a5960621b60448201526064016101d3565b50506101008501516101208601519550959350505050565b6000806040838503121561062a57600080fd5b50508035926020909101359150565b60006020828403121561064b57600080fd5b5035919050565b604051610160810167ffffffffffffffff8111828210171561068457634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b038116811461033157600080fd5b80356106aa8161068a565b919050565b63ffffffff8116811461033157600080fd5b80356106aa816106af565b61ffff8116811461033157600080fd5b80356106aa816106cc565b67ffffffffffffffff8116811461033157600080fd5b80356106aa816106e7565b801515811461033157600080fd5b80356106aa81610708565b60008060008060008587036101e081121561073b57600080fd5b61016081121561074a57600080fd5b50610753610652565b8635815260208088013590820152604080880135908201526107776060880161069f565b6060820152610788608088016106c1565b608082015261079960a088016106dc565b60a08201526107aa60c088016106fd565b60c08201526107bb60e0880161069f565b60e08201526107cd610100880161069f565b6101008201526107e0610120880161069f565b6101208201526107f36101408801610716565b6101408201529450610160860135935061081061018087016106c1565b949793965093946101a081013594506101c0013592915050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176100f8576100f861082a565b60008261087457634e487b7160e01b600052601260045260246000fd5b500490565b80516106aa81610708565b60008060008060008060008060008060006101608c8e0312156108a657600080fd5b8b5160208d015160408e015160608f0151929d50909b5099506108c88161068a565b60808d01519098506108d9816106af565b60a08d01519097506108ea816106cc565b60c08d01519096506108fb816106e7565b60e08d015190955061090c8161068a565b6101008d015190945061091e8161068a565b6101208d01519093506109308161068a565b915061093f6101408d01610879565b90509295989b509295989b9093969950565b808201808211156100f8576100f861082a565b60006020828403121561097657600080fd5b815161098181610708565b9392505050565b60006020828403121561099a57600080fd5b505191905056fea2646970667358221220da7711b32bb63cc7367d55a8c5b64e604674de7765369d69b3befe840ff08e6d64736f6c634300081c0033";

type LoanChecksAndCalculationsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LoanChecksAndCalculationsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LoanChecksAndCalculations__factory extends ContractFactory {
  constructor(...args: LoanChecksAndCalculationsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LoanChecksAndCalculations & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LoanChecksAndCalculations__factory {
    return super.connect(runner) as LoanChecksAndCalculations__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LoanChecksAndCalculationsInterface {
    return new Interface(_abi) as LoanChecksAndCalculationsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LoanChecksAndCalculations {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LoanChecksAndCalculations;
  }
}
