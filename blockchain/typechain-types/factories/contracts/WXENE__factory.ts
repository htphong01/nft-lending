/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { WXENE, WXENEInterface } from "../../contracts/WXENE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferNativeFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600c81526020017f577261707065642058454e4500000000000000000000000000000000000000008152506040518060400160405280600581526020017f7758454e45000000000000000000000000000000000000000000000000000000815250816003908161008c9190610311565b50806004908161009c9190610311565b5050506100b967f8c9d1b4f2c0dd3360c01b6100be60201b60201c565b6103e3565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061014257607f821691505b602082108103610155576101546100fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610180565b6101c78683610180565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061020e610209610204846101df565b6101e9565b6101df565b9050919050565b6000819050919050565b610228836101f3565b61023c61023482610215565b84845461018d565b825550505050565b600090565b610251610244565b61025c81848461021f565b505050565b5b8181101561028057610275600082610249565b600181019050610262565b5050565b601f8211156102c5576102968161015b565b61029f84610170565b810160208510156102ae578190505b6102c26102ba85610170565b830182610261565b50505b505050565b600082821c905092915050565b60006102e8600019846008026102ca565b1980831691505092915050565b600061030183836102d7565b9150826002028217905092915050565b61031a826100c1565b67ffffffffffffffff811115610333576103326100cc565b5b61033d825461012a565b610348828285610284565b600060209050601f83116001811461037b5760008415610369578287015190505b61037385826102f5565b8655506103db565b601f1984166103898661015b565b60005b828110156103b15784890151825560018201915060208501945060208101905061038c565b868310156103ce57848901516103ca601f8916826102d7565b8355505b6001600288020188555050505b505050505050565b61140d806103f26000396000f3fe6080604052600436106100a75760003560e01c806342966c681161006457806342966c68146101b157806370a08231146101da578063755edd171461021757806395d89b4114610233578063a9059cbb1461025e578063dd62ed3e1461029b576100a7565b806306fdde03146100ac578063095ea7b3146100d75780631249c58b1461011457806318160ddd1461011e57806323b872dd14610149578063313ce56714610186575b600080fd5b3480156100b857600080fd5b506100c16102d8565b6040516100ce9190610fc5565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190611080565b61036a565b60405161010b91906110db565b60405180910390f35b61011c61038d565b005b34801561012a57600080fd5b50610133610444565b6040516101409190611105565b60405180910390f35b34801561015557600080fd5b50610170600480360381019061016b9190611120565b61044e565b60405161017d91906110db565b60405180910390f35b34801561019257600080fd5b5061019b61047d565b6040516101a8919061118f565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d391906111aa565b610486565b005b3480156101e657600080fd5b5061020160048036038101906101fc91906111d7565b610661565b60405161020e9190611105565b60405180910390f35b610231600480360381019061022c91906111d7565b6106a9565b005b34801561023f57600080fd5b50610248610753565b6040516102559190610fc5565b60405180910390f35b34801561026a57600080fd5b5061028560048036038101906102809190611080565b6107e5565b60405161029291906110db565b60405180910390f35b3480156102a757600080fd5b506102c260048036038101906102bd9190611204565b610808565b6040516102cf9190611105565b60405180910390f35b6060600380546102e790611273565b80601f016020809104026020016040519081016040528092919081815260200182805461031390611273565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b60008061037561088f565b9050610382818585610897565b600191505092915050565b6103a167ea437170e30ecaf560c01b6108a9565b6103b567b4de96befcf3d43260c01b6108a9565b6103c9673b6913bf3393ff1060c01b6108a9565b6103da6103d461088f565b346108ac565b6103ee6758f4d0368931e22b60c01b6108a9565b61040267b38fed6d72232d5e60c01b6108a9565b7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe61042b61088f565b3460405161043a9291906112b3565b60405180910390a1565b6000600254905090565b60008061045961088f565b905061046685828561092e565b6104718585856109c3565b60019150509392505050565b60006012905090565b61049a670faca301c65ec71060c01b6108a9565b6104ae67d7a3093db04feef360c01b6108a9565b6104c2673d519a7918b8be7360c01b6108a9565b6104d36104cd61088f565b82610ab7565b6104e767e6a294b49c97e7ff60c01b6108a9565b6104fb673af2f5b243c3dcad60c01b6108a9565b600061050561088f565b73ffffffffffffffffffffffffffffffffffffffff16826040516105289061130d565b60006040518083038185875af1925050503d8060008114610565576040519150601f19603f3d011682016040523d82523d6000602084013e61056a565b606091505b50509050610582671d1be44491113e5560c01b6108a9565b61059667f504ac8dfc328f5f60c01b6108a9565b806105e1576105af6764bf8fae220ce35e60c01b6108a9565b6040517fb06a467a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f5675dee6b9dcd07142f60c01b6108a9565b61060967bfa95083ace6bcde60c01b6108a9565b61061d670d3a357fcb02b17b60c01b6108a9565b7f919f7e2092ffcc9d09f599be18d8152860b0c054df788a33bc549cdd9d0f15b161064661088f565b836040516106559291906112b3565b60405180910390a15050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106bd670e0aa4eda9a7953a60c01b6108a9565b6106d1679cb69f641323d71460c01b6108a9565b6106e56773c3013fc375d3a160c01b6108a9565b6106ef81346108ac565b610703679c7bcb8b48e73d6b60c01b6108a9565b6107176771ab312f3bdca6d060c01b6108a9565b7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe81346040516107489291906112b3565b60405180910390a150565b60606004805461076290611273565b80601f016020809104026020016040519081016040528092919081815260200182805461078e90611273565b80156107db5780601f106107b0576101008083540402835291602001916107db565b820191906000526020600020905b8154815290600101906020018083116107be57829003601f168201915b5050505050905090565b6000806107f061088f565b90506107fd8185856109c3565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6108a48383836001610b39565b505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361091e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109159190611322565b60405180910390fd5b61092a60008383610d10565b5050565b600061093a8484610808565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109bd57818110156109ad578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109a49392919061133d565b60405180910390fd5b6109bc84848484036000610b39565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a355760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a2c9190611322565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa75760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a9e9190611322565b60405180910390fd5b610ab2838383610d10565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b295760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b209190611322565b60405180910390fd5b610b3582600083610d10565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bab5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ba29190611322565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1d5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c149190611322565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d0a578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d019190611105565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d62578060026000828254610d5691906113a3565b92505081905550610e35565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610dee578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610de59392919061133d565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7e5780600260008282540392505081905550610ecb565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f289190611105565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f6f578082015181840152602081019050610f54565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f9782610f35565b610fa18185610f40565b9350610fb1818560208601610f51565b610fba81610f7b565b840191505092915050565b60006020820190508181036000830152610fdf8184610f8c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101782610fec565b9050919050565b6110278161100c565b811461103257600080fd5b50565b6000813590506110448161101e565b92915050565b6000819050919050565b61105d8161104a565b811461106857600080fd5b50565b60008135905061107a81611054565b92915050565b6000806040838503121561109757611096610fe7565b5b60006110a585828601611035565b92505060206110b68582860161106b565b9150509250929050565b60008115159050919050565b6110d5816110c0565b82525050565b60006020820190506110f060008301846110cc565b92915050565b6110ff8161104a565b82525050565b600060208201905061111a60008301846110f6565b92915050565b60008060006060848603121561113957611138610fe7565b5b600061114786828701611035565b935050602061115886828701611035565b92505060406111698682870161106b565b9150509250925092565b600060ff82169050919050565b61118981611173565b82525050565b60006020820190506111a46000830184611180565b92915050565b6000602082840312156111c0576111bf610fe7565b5b60006111ce8482850161106b565b91505092915050565b6000602082840312156111ed576111ec610fe7565b5b60006111fb84828501611035565b91505092915050565b6000806040838503121561121b5761121a610fe7565b5b600061122985828601611035565b925050602061123a85828601611035565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128b57607f821691505b60208210810361129e5761129d611244565b5b50919050565b6112ad8161100c565b82525050565b60006040820190506112c860008301856112a4565b6112d560208301846110f6565b9392505050565b600081905092915050565b50565b60006112f76000836112dc565b9150611302826112e7565b600082019050919050565b6000611318826112ea565b9150819050919050565b600060208201905061133760008301846112a4565b92915050565b600060608201905061135260008301866112a4565b61135f60208301856110f6565b61136c60408301846110f6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ae8261104a565b91506113b98361104a565b92508282019050808211156113d1576113d0611374565b5b9291505056fea264697066735822122031c47d772845f634b83a953b75d02c31bc038cb69df868558bded48042f59c9f64736f6c634300081c0033";

type WXENEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXENEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXENE__factory extends ContractFactory {
  constructor(...args: WXENEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WXENE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WXENE__factory {
    return super.connect(runner) as WXENE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXENEInterface {
    return new Interface(_abi) as WXENEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WXENE {
    return new Contract(address, _abi, runner) as unknown as WXENE;
  }
}
