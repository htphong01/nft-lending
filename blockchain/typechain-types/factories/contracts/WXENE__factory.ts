/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { WXENE, WXENEInterface } from "../../contracts/WXENE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferNativeFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Burnt",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040518060400160405280600c81526020017f577261707065642058454e4500000000000000000000000000000000000000008152506040518060400160405280600581526020017f7758454e45000000000000000000000000000000000000000000000000000000815250816003908161008c9190610311565b50806004908161009c9190610311565b5050506100b9677d0bfa7b883f3fe860c01b6100be60201b60201c565b6103e3565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061014257607f821691505b602082108103610155576101546100fb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610180565b6101c78683610180565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061020e610209610204846101df565b6101e9565b6101df565b9050919050565b6000819050919050565b610228836101f3565b61023c61023482610215565b84845461018d565b825550505050565b600090565b610251610244565b61025c81848461021f565b505050565b5b8181101561028057610275600082610249565b600181019050610262565b5050565b601f8211156102c5576102968161015b565b61029f84610170565b810160208510156102ae578190505b6102c26102ba85610170565b830182610261565b50505b505050565b600082821c905092915050565b60006102e8600019846008026102ca565b1980831691505092915050565b600061030183836102d7565b9150826002028217905092915050565b61031a826100c1565b67ffffffffffffffff811115610333576103326100cc565b5b61033d825461012a565b610348828285610284565b600060209050601f83116001811461037b5760008415610369578287015190505b61037385826102f5565b8655506103db565b601f1984166103898661015b565b60005b828110156103b15784890151825560018201915060208501945060208101905061038c565b868310156103ce57848901516103ca601f8916826102d7565b8355505b6001600288020188555050505b505050505050565b61140c806103f26000396000f3fe6080604052600436106100a75760003560e01c806342966c681161006457806342966c68146101b157806370a08231146101da578063755edd171461021757806395d89b4114610233578063a9059cbb1461025e578063dd62ed3e1461029b576100a7565b806306fdde03146100ac578063095ea7b3146100d75780631249c58b1461011457806318160ddd1461011e57806323b872dd14610149578063313ce56714610186575b600080fd5b3480156100b857600080fd5b506100c16102d8565b6040516100ce9190610fc4565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f9919061107f565b61036a565b60405161010b91906110da565b60405180910390f35b61011c61038d565b005b34801561012a57600080fd5b50610133610443565b6040516101409190611104565b60405180910390f35b34801561015557600080fd5b50610170600480360381019061016b919061111f565b61044d565b60405161017d91906110da565b60405180910390f35b34801561019257600080fd5b5061019b61047c565b6040516101a8919061118e565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d391906111a9565b610485565b005b3480156101e657600080fd5b5061020160048036038101906101fc91906111d6565b610660565b60405161020e9190611104565b60405180910390f35b610231600480360381019061022c91906111d6565b6106a8565b005b34801561023f57600080fd5b50610248610752565b6040516102559190610fc4565b60405180910390f35b34801561026a57600080fd5b506102856004803603810190610280919061107f565b6107e4565b60405161029291906110da565b60405180910390f35b3480156102a757600080fd5b506102c260048036038101906102bd9190611203565b610807565b6040516102cf9190611104565b60405180910390f35b6060600380546102e790611272565b80601f016020809104026020016040519081016040528092919081815260200182805461031390611272565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b60008061037561088e565b9050610382818585610896565b600191505092915050565b6103a167e70ae9158e0a304960c01b6108a8565b6103b46652ae76cb9a142460c01b6108a8565b6103c867b87be66553abee8b60c01b6108a8565b6103d96103d361088e565b346108ab565b6103ed6714f510fa2e51ed0660c01b6108a8565b610401675c6b775d6a116d5960c01b6108a8565b7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe61042a61088e565b346040516104399291906112b2565b60405180910390a1565b6000600254905090565b60008061045861088e565b905061046585828561092d565b6104708585856109c2565b60019150509392505050565b60006012905090565b61049967cfab3734e7c331c160c01b6108a8565b6104ad67d61f79c71cf301ea60c01b6108a8565b6104c1675924837b50dda89d60c01b6108a8565b6104d26104cc61088e565b82610ab6565b6104e667385256d1e0c2162b60c01b6108a8565b6104fa67bee1cdc50a0af0bb60c01b6108a8565b600061050461088e565b73ffffffffffffffffffffffffffffffffffffffff16826040516105279061130c565b60006040518083038185875af1925050503d8060008114610564576040519150601f19603f3d011682016040523d82523d6000602084013e610569565b606091505b50509050610581672a9f5ef1d781a95360c01b6108a8565b61059567fb1b78fc9760193f60c01b6108a8565b806105e0576105ae673d88d6c70fc0596b60c01b6108a8565b6040517fb06a467a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105f467fc2807217de7a52860c01b6108a8565b610608675598d5e934ae4a0460c01b6108a8565b61061c6772f2f08b999ab50160c01b6108a8565b7f919f7e2092ffcc9d09f599be18d8152860b0c054df788a33bc549cdd9d0f15b161064561088e565b836040516106549291906112b2565b60405180910390a15050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6106bc67e0414a88f1d0899560c01b6108a8565b6106d067e5ce35f0791c9f3e60c01b6108a8565b6106e467707f812c5f97a9f560c01b6108a8565b6106ee81346108ab565b610702671d209d2acd68905f60c01b6108a8565b61071667ef93bf89cb353a0260c01b6108a8565b7f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe81346040516107479291906112b2565b60405180910390a150565b60606004805461076190611272565b80601f016020809104026020016040519081016040528092919081815260200182805461078d90611272565b80156107da5780601f106107af576101008083540402835291602001916107da565b820191906000526020600020905b8154815290600101906020018083116107bd57829003601f168201915b5050505050905090565b6000806107ef61088e565b90506107fc8185856109c2565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6108a38383836001610b38565b505050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361091d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109149190611321565b60405180910390fd5b61092960008383610d0f565b5050565b60006109398484610807565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109bc57818110156109ac578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109a39392919061133c565b60405180910390fd5b6109bb84848484036000610b38565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a345760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a2b9190611321565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aa65760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a9d9190611321565b60405180910390fd5b610ab1838383610d0f565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b285760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b1f9190611321565b60405180910390fd5b610b3482600083610d0f565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610baa5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ba19190611321565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c1c5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c139190611321565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d09578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d009190611104565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d61578060026000828254610d5591906113a2565b92505081905550610e34565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ded578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610de49392919061133c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e7d5780600260008282540392505081905550610eca565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f279190611104565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f6e578082015181840152602081019050610f53565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f9682610f34565b610fa08185610f3f565b9350610fb0818560208601610f50565b610fb981610f7a565b840191505092915050565b60006020820190508181036000830152610fde8184610f8b565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101682610feb565b9050919050565b6110268161100b565b811461103157600080fd5b50565b6000813590506110438161101d565b92915050565b6000819050919050565b61105c81611049565b811461106757600080fd5b50565b60008135905061107981611053565b92915050565b6000806040838503121561109657611095610fe6565b5b60006110a485828601611034565b92505060206110b58582860161106a565b9150509250929050565b60008115159050919050565b6110d4816110bf565b82525050565b60006020820190506110ef60008301846110cb565b92915050565b6110fe81611049565b82525050565b600060208201905061111960008301846110f5565b92915050565b60008060006060848603121561113857611137610fe6565b5b600061114686828701611034565b935050602061115786828701611034565b92505060406111688682870161106a565b9150509250925092565b600060ff82169050919050565b61118881611172565b82525050565b60006020820190506111a3600083018461117f565b92915050565b6000602082840312156111bf576111be610fe6565b5b60006111cd8482850161106a565b91505092915050565b6000602082840312156111ec576111eb610fe6565b5b60006111fa84828501611034565b91505092915050565b6000806040838503121561121a57611219610fe6565b5b600061122885828601611034565b925050602061123985828601611034565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061128a57607f821691505b60208210810361129d5761129c611243565b5b50919050565b6112ac8161100b565b82525050565b60006040820190506112c760008301856112a3565b6112d460208301846110f5565b9392505050565b600081905092915050565b50565b60006112f66000836112db565b9150611301826112e6565b600082019050919050565b6000611317826112e9565b9150819050919050565b600060208201905061133660008301846112a3565b92915050565b600060608201905061135160008301866112a3565b61135e60208301856110f5565b61136b60408301846110f5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ad82611049565b91506113b883611049565b92508282019050808211156113d0576113cf611373565b5b9291505056fea2646970667358221220b6b825cf478960659520d91406fbe50c3554fd73978ff28ceab89604b5c6098d64736f6c634300081c0033";

type WXENEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXENEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXENE__factory extends ContractFactory {
  constructor(...args: WXENEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WXENE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WXENE__factory {
    return super.connect(runner) as WXENE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXENEInterface {
    return new Interface(_abi) as WXENEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WXENE {
    return new Contract(address, _abi, runner) as unknown as WXENE;
  }
}
