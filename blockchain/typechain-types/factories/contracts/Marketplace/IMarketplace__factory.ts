/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMarketplace,
  IMarketplaceInterface,
} from "../../../contracts/Marketplace/IMarketplace";

const _abi = [
  {
    inputs: [],
    name: "InvalidBeneficiary",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeePercent",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNft",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnougnETH",
    type: "error",
  },
  {
    inputs: [],
    name: "NotExistedItem",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOpeningItem",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPermittedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyItemOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "closeItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
    ],
    name: "makeItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMarketplace__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketplaceInterface {
    return new Interface(_abi) as IMarketplaceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMarketplace {
    return new Contract(address, _abi, runner) as unknown as IMarketplace;
  }
}
